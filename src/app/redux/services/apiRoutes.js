const merchantRoutes = "merchant/merchant";
// const api = "api";
const productRoutes = "storefront/storefront/product";
const storeRoutes = "storefront/storefront";
// const authenticatorApi = "https://www.authenticatorApi.com";

export const apiRoutes = {
    merchantRegister: `${merchantRoutes}/register`,
    merchantSendOTP: `${merchantRoutes}/send/otp`,
    merchantLogin: `${merchantRoutes}/login`,
    merchantDetail: `${merchantRoutes}/detail`,
    merchantLoginNew: { url: `${merchantRoutes}/login`, method: "POST" },
    applicationStep: (stepNumber) => `${merchantRoutes}/application/step-${stepNumber}`,
    uniqueValidation: `${merchantRoutes}/login/validation`,
    enableMultipleConnector: `${merchantRoutes}/profile/on-off-multi-connector`,
    removeLimitConnector: `${merchantRoutes}/connector/settings/remove`,
    changePassword: `${merchantRoutes}/change/password`,
    forgotPassword: `${merchantRoutes}/forgot-password`,
    verifyPasswordToken: `${merchantRoutes}/forgot-password/verify`,
    updatePassword: `${merchantRoutes}/forgot-password/update-password`,
    captchaVerify: { url: `merchant/captcha/verify`, method: "POST" },
    getApplicationStep: { url: `${merchantRoutes}/application/get`, method: "POST" },
    editApplicationStep: (stepNumber) => ({ url: `${merchantRoutes}/update/application/step-${stepNumber}`, method: "POST" }),
    getConnector: `${merchantRoutes}/connectors/get`,
    getEnabledConnector: `${merchantRoutes}/whitelisted-ip/active-connetors`,
    getConnectorSettings: `${merchantRoutes}/get/connector/settings`,
    updateConnector: `${merchantRoutes}/merchant-connector/update`,
    updateConnectorSettings: `${merchantRoutes}/connector/settings`,
    updateConnectorMode: `${merchantRoutes}/merchant-connector/mode/update`,
    getConnectorType: `${merchantRoutes}/merchant-connector/get/type`,
    getDefaultConnector: `${merchantRoutes}/merchant-connector/default/mid`,
    setDefaultConnector: `${merchantRoutes}/merchant-connector/default/mid/store`,
    getVendors: `${merchantRoutes}/split-payment-vendor/list`,
    createVendors: `${merchantRoutes}/split-payment-vendor/create`,
    updateVendors: `${merchantRoutes}/split-payment-vendor/update`,
    deleteVendors: `${merchantRoutes}/split-payment-vendor/delete`,
    autoSplitPaymentEdit: `${merchantRoutes}/auto-split-payment-transaction/modify-vendors`,
    getAutoSplitPaymentData: `${merchantRoutes}/auto-split-payment-transaction/get-vendors`,
    getRules: `${merchantRoutes}/get/rules`,
    getRulesDetail: `${merchantRoutes}/rules/details`,
    updateRules: `${merchantRoutes}/update/rules`,
    updateRulesPriority: `${merchantRoutes}/update/rules/priority`,
    createRules: `${merchantRoutes}/create/rules`,
    deleteRules: `${merchantRoutes}/delete/rules`,
    updateRulesStatus: `${merchantRoutes}/update/rules/status`,
    getTransactions: `${merchantRoutes}/transactions/manual-transaction`,
    getTransactionsLive: `${merchantRoutes}/transactions`,
    uploadAgreement: `${merchantRoutes}/application-agreement-received`,
    getMasterSmsTemplates: `${merchantRoutes}/payment-sms-content`,
    getMerchantSmsTemplates: `${merchantRoutes}/payment/template`,
    createMerchantSmsTemplates: `${merchantRoutes}/create/payment/template`,
    deleteMerchantSmsTemplates: `${merchantRoutes}/delete/payment/template`,
    updateMerchantSmsTemplates: `${merchantRoutes}/update/payment/template`,
    detailMerchantSmsTemplates: `${merchantRoutes}/detail/payment/template`,
    sendPaymentSms: `${merchantRoutes}/send/payment/sms`,
    detailMerchantApplicationRates: `${merchantRoutes}/detail`,
    approveMerchantApplicationRates: `${merchantRoutes}/application/approve`,
    declineMerchantApplicationRates: `${merchantRoutes}/application/decline`,
    deleteMultipleImage: `${merchantRoutes}/delete/multiple/file`,
    getNotification: `${merchantRoutes}/notifications/list`,
    getNotificationDetail: `${merchantRoutes}/notifications/details`,
    deleteNotification: `${merchantRoutes}/notifications/delete`,
    deleteDirectorShareholder: (type) => `${merchantRoutes}/application/${type}/delete`,
    getProductsCategoryList: `${storeRoutes}/category/list`,
    getProductsCategoryListAll: `${storeRoutes}/category/all`,
    createProductCategory: `${storeRoutes}/category/create`,
    editProductCategory: `${storeRoutes}/category/update`,
    deleteProductCategory: `${storeRoutes}/category/delete`,
    productCategoryExport: `${storeRoutes}/category/export`,
    getProductsList: `${productRoutes}/list`,
    createProduct: `${productRoutes}/create`,
    editProduct: `${productRoutes}/update`,
    editProductStatus: `${storeRoutes}/update/product/status`,
    deleteProduct: `${productRoutes}/delete`,
    getProductDetails: `${productRoutes}/get-details`,
    getStoreList: `${storeRoutes}/store/list`,
    getStore: `${storeRoutes}/store/get-details`,
    creteStore: `${storeRoutes}/store/create`,
    updateStore: `${storeRoutes}/store/update`,
    updateStoreStatus: `${storeRoutes}/update/store/status`,
    deleteStore: `${storeRoutes}/store/delete`,
    getIPWhitelist: `${merchantRoutes}/whitelisted-ip/get`,
    createIPWhitelist: `${merchantRoutes}/whitelisted-ip/store`,
    deleteIPWhitelist: `${merchantRoutes}/whitelisted-ip/delete`,
    updateIPWhitelist: `${merchantRoutes}/whitelisted-ip/update`,
    detailIPWhitelist: `${merchantRoutes}/whitelisted-ip/detail`,
    getSMSCampaign: `${merchantRoutes}/sms/campaign/list`,
    createSMSCampaign: `${merchantRoutes}/sms/campaign/create`,
    deleteSMSCampaign: `${merchantRoutes}/sms/campaign/delete`,
    updateSMSCampaign: `${merchantRoutes}/sms/campaign/update`,
    detailSMSCampaign: `${merchantRoutes}/sms/campaign/detail`,
    getSMSCampaignPreviewList: `${merchantRoutes}/sms/campaign/mobile-list`,
    smsCampaignSendSMS: `${merchantRoutes}/sms/campaign/send-sms`,
    getEmailCampaign: `${merchantRoutes}/email/campaign/list`,
    createEmailCampaign: `${merchantRoutes}/email/campaign/create`,
    deleteEmailCampaign: `${merchantRoutes}/email/campaign/delete`,
    updateEmailCampaign: `${merchantRoutes}/email/campaign/update`,
    detailEmailCampaign: `${merchantRoutes}/email/campaign/detail`,
    getEmailCampaignPreviewList: `${merchantRoutes}/email/campaign/email-list`,
    emailCampaignSendEmail: `${merchantRoutes}/email/campaign/send-email`,
    getContact: `${merchantRoutes}/contact/list`,
    createContact: `${merchantRoutes}/contact/create`,
    deleteContact: `${merchantRoutes}/contact/delete`,
    updateContact: `${merchantRoutes}/contact/update`,
    detailContact: `${merchantRoutes}/contact/detail`,
    getBlogs: `${storeRoutes}/blog/list`,
    createBlog: `${storeRoutes}/blog/create`,
    deleteBlog: `${storeRoutes}/blog/delete`,
    updateBlog: `${storeRoutes}/blog/update`,
    detailBlog: `${storeRoutes}/blog/show`,
    blogExport: `${storeRoutes}/blog/export`,
    getCollectionBanner: `${storeRoutes}/collection-banner/list`,
    createBlogCollectionBanner: `${storeRoutes}/collection-banner/create`,
    deleteBlogCollectionBanner: `${storeRoutes}/collection-banner/delete`,
    updateBlogCollectionBanner: `${storeRoutes}/collection-banner/update`,
    detailBlogCollectionBanner: `${storeRoutes}/collection-banner/show`,
    collectionBannerExport: `${storeRoutes}/collection-banner/export`,
    contactCategoryList: `${merchantRoutes}/contact/category/list?active=`,
    getContactEmailHistory: `${merchantRoutes}/contact/email-campaign/list`,
    getContactSmsHistory: `${merchantRoutes}/contact/sms-campaign/list`,
    contactDownloadSampleFile: `${merchantRoutes}/contact/sample/download`,
    contactFilter: `${merchantRoutes}/contact/filter`,
    contactImport: `${merchantRoutes}/contact/import`,
    contactExport: `${merchantRoutes}/contact/export`,
    profileUpdate: `${merchantRoutes}/profile/update`,
    editUpdate: `${merchantRoutes}/update/profile`,
    verifyMobileOtp: `${merchantRoutes}/verify/mobile/otp`,
    getPaymentLink: `${merchantRoutes}/payment-link/list`,
    createPaymentLink: `${merchantRoutes}/payment-link/create`,
    deletePaymentLink: `${merchantRoutes}/payment-link/delete`,
    updatePaymentLink: `${merchantRoutes}/payment-link/update`,
    detailPaymentLink: `${merchantRoutes}/payment-link/detail`,
    paymentLinkExport: `${merchantRoutes}/payment-link/export`,
    paymentLinkSend: `${merchantRoutes}/payment-link/send-link`,
    //Payment Page
    getPaymentPage: `${merchantRoutes}/payment-page/list`,
    createPaymentPage: `${merchantRoutes}/payment-page/create`,
    deletePaymentPage: `${merchantRoutes}/payment-page/delete`,
    updatePaymentPage: `${merchantRoutes}/payment-page/update`,
    detailPaymentPage: `${merchantRoutes}/payment-page/detail`,
    userDetailPaymentPage: `${merchantRoutes}/payment-page/view`,
    generateLinkPaymentPage: `${merchantRoutes}/payment-page/generate/link`,
    paymentPageExport: `${merchantRoutes}/payment-page/export`,

    getWebhook: `${merchantRoutes}/webhook/list`,
    createWebhook: `${merchantRoutes}/webhook/create`,
    deleteWebhook: `${merchantRoutes}/webhook/delete`,
    updateWebhook: `${merchantRoutes}/webhook/update`,
    detailWebhook: `${merchantRoutes}/webhook/detail`,
    eventWebhook: `${merchantRoutes}/webhook/events`,
    subscribedEventWebhook: `${merchantRoutes}/webhook/subscribed/events`,
    webhookExport: `${merchantRoutes}/webhook/export`,
    viewWebhook: `${merchantRoutes}/webhook/view`,
    updateWebhookStatus: `${merchantRoutes}/webhook/status/change`,
    getWebhookLogs: `${merchantRoutes}/webhook/log`,
    testWebhook: `${merchantRoutes}/webhook/test`,

    // Payment Card
    getPaymentCard: `${merchantRoutes}/card/list`,
    createPaymentCard: `${merchantRoutes}/card/create`,
    deletePaymentCard: `${merchantRoutes}/card/delete`,
    updatePaymentCard: `${merchantRoutes}/card/update`,
    detailPaymentCard: `${merchantRoutes}/card/detail`,
    paymentCardExport: `${merchantRoutes}/card/export`,
    paymentCardSend: `${merchantRoutes}/card/send`,
    paymentCardProductList: `${merchantRoutes}/product/list/all`,
    userDetailPaymentCard: `${merchantRoutes}/card/view`,
    generateLinkPaymentCard: `${merchantRoutes}/card/generate-link`,

    // resendProfileOtp: `${merchantRoutes}/resend/verify-email-otp`,
    emailVerify: `${merchantRoutes}/profile/verify-email-otp`,
    resendProfileOTP: `${merchantRoutes}/resend/verify-otp`,
    createPayButton: `${merchantRoutes}/pay-button/store`,
    updatePayButton: `${merchantRoutes}/pay-button/update`,
    listPayButton: `${merchantRoutes}/pay-button/list`,
    deletePayButton: `${merchantRoutes}/pay-button/delete`,
    detailsPayButton: `${merchantRoutes}/pay-button/detail`,
    createInvoice: `${merchantRoutes}/invoice/store`,
    updateInvoice: `${merchantRoutes}/invoice/update`,
    listInvoice: `${merchantRoutes}/invoice/list`,
    deleteInvoice: `${merchantRoutes}/invoice/delete`,
    detailsInvoice: `${merchantRoutes}/invoice/detail`,
    payment: `payment/merchant/transaction`,
    sendInvoice: `${merchantRoutes}/send/invoice/email`,
    downloadInvoice: `${merchantRoutes}/invoice/download/pdf`,
    getAPIKey: `${merchantRoutes}/secret-keys/get`,
    createAPIKey: `${merchantRoutes}/secret-keys/store`,
    deleteAPIKey: `${merchantRoutes}/secret-keys/delete`,
    orderList: `${storeRoutes}/orders`,
    applicationList: `${merchantRoutes}/application/get/details`,
    invoiceExport: `${merchantRoutes}/invoice/export`,
    transactionsExport: `${merchantRoutes}/transactions/manual-transactions/export`,
    transactionsLiveExport: `${merchantRoutes}/transactions/export`,
    connectorExport: `${merchantRoutes}/connectors/export`,
    rulesExport: `${merchantRoutes}/rules/export`,
    ipWhiteListExport: `${merchantRoutes}/whitelisted-ip/export`,
    smsPaymentExport: `${merchantRoutes}/export/payment/sms`,
    payButtonExport: `${merchantRoutes}/pay-button/export`,
    storeExport: `${storeRoutes}/store/export`,
    productExport: `${storeRoutes}/product/export`,
    orderExport: `${storeRoutes}/orders/export`,
    transactionStatus: `${merchantRoutes}/chart-transaction-data`,
    connectorTransaction: `${merchantRoutes}/chart-connector-data`,
    paymentMethodTransaction: `${merchantRoutes}/chart-payment-method-data`,
    categoryList: `${merchantRoutes}/category/list`,
    transactionsRefund: `${merchantRoutes}/transactions/refund`,
    widgetList: `${merchantRoutes}/transaction/block-widget/list`,
    educationCategoryList: `${merchantRoutes}/category-feature/list`,
    storeLogoList: `${storeRoutes}/dashboard/store-logo/list`,
    connectorLogoList: `${merchantRoutes}/dashboard/connector-logo/list`,
    transactionsChargeBack: `${merchantRoutes}/transactions/chargeback`,
    transactionsSuspicious: `${merchantRoutes}/transactions/suspicious`,
    transactionsRemoveSuspicious: `${merchantRoutes}/transactions/remove-suspicious`,
    transactionsRetrieval: `${merchantRoutes}/transactions/retrieval`,
    transactionsRemoveRetrieval: `${merchantRoutes}/transactions/remove-retrieval`,
    transactionChangeStatus: `${merchantRoutes}/transactions/change-status`,
    googleAuthPair: `${merchantRoutes}/googele-auth/send/qr?`,
    googleAuthValidate: `${merchantRoutes}/googele-auth/validate/qr?`,
    changeVerificationFlag: `${merchantRoutes}/update/google/authenticator`,
    forgetGoogleAuthenticator: `${merchantRoutes}/forget/google/authenticator`,
    verifyRp: `${merchantRoutes}/verify-rp?RP=`,
    autoPayoutReports: `${merchantRoutes}/report/payout/lists`,
    autoPayoutSetting: `${merchantRoutes}/report/payout/autopay`,
    payoutConnector: `${merchantRoutes}/active-connetors-payout-payment`,
    generatePayout: `${merchantRoutes}/report/payout-payment/create`,
    getAutoPayoutSetting: `${merchantRoutes}/report/payout/autopay`,
    getAutoPayoutDetail: `${merchantRoutes}/report/payout/details`,
    settlementData: `${merchantRoutes}/default/payout-report`,
    settlementPreviewData: `${merchantRoutes}/default/view-payout-report`,
    settlementConnectorList: `${merchantRoutes}/active-connetors-settlement`,
    getPayoutModeData: `${merchantRoutes}/report/payout-payment/get-mode`,
    getPayoutModeFieldData: `${merchantRoutes}/report/payout-payment/get-mode-field`,
    getPayoutDetailData: `${merchantRoutes}/report/payout-payment/edit`,
    getVendorList: `${merchantRoutes}/split-payment-transaction/get-vendors`,
    addSplitPayment: `${merchantRoutes}/split-payment-transaction/store`,
    getSplitTransactions: `${merchantRoutes}/split-payment-transaction/get-split-transactions`,
    getSplitTransactions: `${merchantRoutes}/split-payment-transaction/get-split-transactions`,
};
