{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nexport const getAPIKeyData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.get(apiRoutes.getAPIKey, payload);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const addAPIKeyData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.createAPIKey, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const deleteAPIKeyData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.deleteAPIKey, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","Rest","getAPIKeyData","payload","data","get","getAPIKey","error","addAPIKeyData","post","createAPIKey","response","responseCode","deleteAPIKeyData","deleteAPIKey"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/APIKey.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\n\nexport const getAPIKeyData = async (payload) => {\n    try {\n        const { data } = await Rest.get(apiRoutes.getAPIKey, payload);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const addAPIKeyData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.createAPIKey, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const deleteAPIKeyData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.deleteAPIKey, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAOC,IAAI,MAAM,uBAAuB;AAExC,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAACN,SAAS,CAACO,SAAS,EAAEH,OAAO,CAAC;IAC7D,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAO;MACHA,KAAK,EAAE,IAAI;MACXH,IAAI,EAAEG;IACV,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOL,OAAO,IAAK;EAC5C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACQ,IAAI,CAACV,SAAS,CAACW,YAAY,EAAEP,OAAO,CAAC;IACjEH,gBAAgB,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,QAAQ,EAAEP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,YAAY,CAAC;IACpD,OAAOR,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAO;MACHA,KAAK,EAAE,IAAI;MACXH,IAAI,EAAEG;IACV,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,MAAOV,OAAO,IAAK;EAC/C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACQ,IAAI,CAACV,SAAS,CAACe,YAAY,EAAEX,OAAO,CAAC;IACjEH,gBAAgB,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,QAAQ,EAAEP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,YAAY,CAAC;IACpD,OAAOR,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAO;MACHA,KAAK,EAAE,IAAI;MACXH,IAAI,EAAEG;IACV,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}