{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { ADD_PAYMENT_LINK_REQUEST, ADD_PAYMENT_LINK_RESPONSE, DELETE_PAYMENT_LINK_REQUEST, DELETE_PAYMENT_LINK_RESPONSE, GET_PAYMENT_LINK_REQUEST, GET_PAYMENT_LINK_RESPONSE, UPDATE_PAYMENT_LINK_REQUEST, UPDATE_PAYMENT_LINK_RESPONSE, DETAIL_PAYMENT_LINK_REQUEST, DETAIL_PAYMENT_LINK_RESPONSE, PAYMENT_LINK_SEND_REQUEST, PAYMENT_LINK_SEND_RESPONSE } from \"../actions/PaymentLinkAction\";\nimport { addPaymentLinkData, deletePaymentLinkData, getPaymentLinkData, updatePaymentLinkData, detailPaymentLinkData, paymentLinkSendData } from \"../services/PaymentLink\";\nfunction* getPaymentLinkSaga(data) {\n  try {\n    const result = yield call(getPaymentLinkData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_PAYMENT_LINK_RESPONSE,\n        payload: {\n          paymentLink: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* addPaymentLinkSaga(action) {\n  try {\n    const result = yield call(addPaymentLinkData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_PAYMENT_LINK_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deletePaymentLinkSaga(action) {\n  // return;\n  try {\n    const result = yield call(deletePaymentLinkData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_PAYMENT_LINK_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.payment_link_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updatePaymentLinkSaga(action) {\n  try {\n    const result = yield call(updatePaymentLinkData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_PAYMENT_LINK_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailPaymentLinkSaga(action) {\n  try {\n    const result = yield call(detailPaymentLinkData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_PAYMENT_LINK_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* paymentLinkSendSaga(action) {\n  try {\n    const result = yield call(paymentLinkSendData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: PAYMENT_LINK_SEND_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchPaymentLinkSaga() {\n  yield takeEvery(GET_PAYMENT_LINK_REQUEST, getPaymentLinkSaga);\n  yield takeEvery(ADD_PAYMENT_LINK_REQUEST, addPaymentLinkSaga);\n  yield takeEvery(DELETE_PAYMENT_LINK_REQUEST, deletePaymentLinkSaga);\n  yield takeEvery(UPDATE_PAYMENT_LINK_REQUEST, updatePaymentLinkSaga);\n  yield takeEvery(DETAIL_PAYMENT_LINK_REQUEST, detailPaymentLinkSaga);\n  yield takeEvery(PAYMENT_LINK_SEND_REQUEST, paymentLinkSendSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchPaymentLinkSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","ADD_PAYMENT_LINK_REQUEST","ADD_PAYMENT_LINK_RESPONSE","DELETE_PAYMENT_LINK_REQUEST","DELETE_PAYMENT_LINK_RESPONSE","GET_PAYMENT_LINK_REQUEST","GET_PAYMENT_LINK_RESPONSE","UPDATE_PAYMENT_LINK_REQUEST","UPDATE_PAYMENT_LINK_RESPONSE","DETAIL_PAYMENT_LINK_REQUEST","DETAIL_PAYMENT_LINK_RESPONSE","PAYMENT_LINK_SEND_REQUEST","PAYMENT_LINK_SEND_RESPONSE","addPaymentLinkData","deletePaymentLinkData","getPaymentLinkData","updatePaymentLinkData","detailPaymentLinkData","paymentLinkSendData","getPaymentLinkSaga","data","result","responseCode","type","payload","paymentLink","paginate","error","callback","addPaymentLinkSaga","action","navigateState","callBack","deletePaymentLinkSaga","_action$payload","id","payment_link_id","updatePaymentLinkSaga","detailPaymentLinkSaga","navigateListing","paymentLinkSendSaga","watchPaymentLinkSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/PaymentLink.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n    ADD_PAYMENT_LINK_REQUEST,\n    ADD_PAYMENT_LINK_RESPONSE,\n    DELETE_PAYMENT_LINK_REQUEST,\n    DELETE_PAYMENT_LINK_RESPONSE,\n    GET_PAYMENT_LINK_REQUEST,\n    GET_PAYMENT_LINK_RESPONSE,\n    UPDATE_PAYMENT_LINK_REQUEST,\n    UPDATE_PAYMENT_LINK_RESPONSE,\n    DETAIL_PAYMENT_LINK_REQUEST,\n    DETAIL_PAYMENT_LINK_RESPONSE,\n    PAYMENT_LINK_SEND_REQUEST,\n    PAYMENT_LINK_SEND_RESPONSE,\n} from \"../actions/PaymentLinkAction\";\nimport {\n    addPaymentLinkData,\n    deletePaymentLinkData,\n    getPaymentLinkData,\n    updatePaymentLinkData,\n    detailPaymentLinkData,\n    paymentLinkSendData,\n} from \"../services/PaymentLink\";\n\nfunction* getPaymentLinkSaga(data) {\n    try {\n        const result = yield call(getPaymentLinkData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_PAYMENT_LINK_RESPONSE,\n                payload: { paymentLink: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* addPaymentLinkSaga(action) {\n    try {\n        const result = yield call(addPaymentLinkData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_PAYMENT_LINK_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deletePaymentLinkSaga(action) {\n    // return;\n    try {\n        const result = yield call(deletePaymentLinkData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_PAYMENT_LINK_RESPONSE,\n                data: result,\n                id: action?.payload?.payment_link_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updatePaymentLinkSaga(action) {\n    try {\n        const result = yield call(updatePaymentLinkData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_PAYMENT_LINK_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailPaymentLinkSaga(action) {\n    try {\n        const result = yield call(detailPaymentLinkData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_PAYMENT_LINK_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* paymentLinkSendSaga(action) {\n    try {\n        const result = yield call(paymentLinkSendData, action.payload);\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: PAYMENT_LINK_SEND_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchPaymentLinkSaga() {\n    yield takeEvery(GET_PAYMENT_LINK_REQUEST, getPaymentLinkSaga);\n    yield takeEvery(ADD_PAYMENT_LINK_REQUEST, addPaymentLinkSaga);\n    yield takeEvery(DELETE_PAYMENT_LINK_REQUEST, deletePaymentLinkSaga);\n    yield takeEvery(UPDATE_PAYMENT_LINK_REQUEST, updatePaymentLinkSaga);\n    yield takeEvery(DETAIL_PAYMENT_LINK_REQUEST, detailPaymentLinkSaga);\n    yield takeEvery(PAYMENT_LINK_SEND_REQUEST, paymentLinkSendSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchPaymentLinkSaga)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}