{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { ADD_COLLECTION_BANNER_REQUEST, ADD_COLLECTION_BANNER_RESPONSE, DELETE_COLLECTION_BANNER_REQUEST, DELETE_COLLECTION_BANNER_RESPONSE, GET_COLLECTION_BANNER_REQUEST, GET_COLLECTION_BANNER_RESPONSE, UPDATE_COLLECTION_BANNER_REQUEST, UPDATE_COLLECTION_BANNER_RESPONSE, DETAIL_COLLECTION_BANNER_REQUEST, DETAIL_COLLECTION_BANNER_RESPONSE } from \"../actions/CollectionBanner\";\nimport { getCollectionBannerData, addCollectionBannerData, deleteCollectionBannerData, updateCollectionBannerData, detailCollectionBannerData } from \"../services/CollectionBanner\";\nfunction* getCollectionBannerSaga(data) {\n  try {\n    const result = yield call(getCollectionBannerData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_COLLECTION_BANNER_RESPONSE,\n        payload: {\n          collectionBanners: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* addCollectionBannerSaga(action) {\n  try {\n    const result = yield call(addCollectionBannerData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_COLLECTION_BANNER_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteCollectionBannerSaga(action) {\n  try {\n    const result = yield call(deleteCollectionBannerData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_COLLECTION_BANNER_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.collection_banner_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateCollectionBannerSaga(action) {\n  try {\n    const result = yield call(updateCollectionBannerData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_COLLECTION_BANNER_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailCollectionBannerSaga(action) {\n  try {\n    const result = yield call(detailCollectionBannerData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_COLLECTION_BANNER_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data[0]\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchCollectionBannerSaga() {\n  yield takeEvery(GET_COLLECTION_BANNER_REQUEST, getCollectionBannerSaga);\n  yield takeEvery(ADD_COLLECTION_BANNER_REQUEST, addCollectionBannerSaga);\n  yield takeEvery(DELETE_COLLECTION_BANNER_REQUEST, deleteCollectionBannerSaga);\n  yield takeEvery(UPDATE_COLLECTION_BANNER_REQUEST, updateCollectionBannerSaga);\n  yield takeEvery(DETAIL_COLLECTION_BANNER_REQUEST, detailCollectionBannerSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchCollectionBannerSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","ADD_COLLECTION_BANNER_REQUEST","ADD_COLLECTION_BANNER_RESPONSE","DELETE_COLLECTION_BANNER_REQUEST","DELETE_COLLECTION_BANNER_RESPONSE","GET_COLLECTION_BANNER_REQUEST","GET_COLLECTION_BANNER_RESPONSE","UPDATE_COLLECTION_BANNER_REQUEST","UPDATE_COLLECTION_BANNER_RESPONSE","DETAIL_COLLECTION_BANNER_REQUEST","DETAIL_COLLECTION_BANNER_RESPONSE","getCollectionBannerData","addCollectionBannerData","deleteCollectionBannerData","updateCollectionBannerData","detailCollectionBannerData","getCollectionBannerSaga","data","result","responseCode","type","payload","collectionBanners","paginate","error","callback","addCollectionBannerSaga","action","navigateState","callBack","deleteCollectionBannerSaga","_action$payload","id","collection_banner_id","updateCollectionBannerSaga","detailCollectionBannerSaga","navigateListing","watchCollectionBannerSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/CollectionBanner.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n    ADD_COLLECTION_BANNER_REQUEST,\n    ADD_COLLECTION_BANNER_RESPONSE,\n    DELETE_COLLECTION_BANNER_REQUEST,\n    DELETE_COLLECTION_BANNER_RESPONSE,\n    GET_COLLECTION_BANNER_REQUEST,\n    GET_COLLECTION_BANNER_RESPONSE,\n    UPDATE_COLLECTION_BANNER_REQUEST,\n    UPDATE_COLLECTION_BANNER_RESPONSE,\n    DETAIL_COLLECTION_BANNER_REQUEST,\n    DETAIL_COLLECTION_BANNER_RESPONSE,\n} from \"../actions/CollectionBanner\";\nimport {\n    getCollectionBannerData,\n    addCollectionBannerData,\n    deleteCollectionBannerData,\n    updateCollectionBannerData,\n    detailCollectionBannerData,\n} from \"../services/CollectionBanner\";\n\nfunction* getCollectionBannerSaga(data) {\n    try {\n        const result = yield call(getCollectionBannerData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_COLLECTION_BANNER_RESPONSE,\n                payload: { collectionBanners: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* addCollectionBannerSaga(action) {\n    try {\n        const result = yield call(addCollectionBannerData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_COLLECTION_BANNER_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteCollectionBannerSaga(action) {\n    try {\n        const result = yield call(deleteCollectionBannerData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_COLLECTION_BANNER_RESPONSE,\n                data: result,\n                id: action?.payload?.collection_banner_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateCollectionBannerSaga(action) {\n    try {\n        const result = yield call(updateCollectionBannerData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_COLLECTION_BANNER_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailCollectionBannerSaga(action) {\n    try {\n        const result = yield call(detailCollectionBannerData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_COLLECTION_BANNER_RESPONSE,\n                data: result?.data[0],\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchCollectionBannerSaga() {\n    yield takeEvery(GET_COLLECTION_BANNER_REQUEST, getCollectionBannerSaga);\n    yield takeEvery(ADD_COLLECTION_BANNER_REQUEST, addCollectionBannerSaga);\n    yield takeEvery(DELETE_COLLECTION_BANNER_REQUEST, deleteCollectionBannerSaga);\n    yield takeEvery(UPDATE_COLLECTION_BANNER_REQUEST, updateCollectionBannerSaga);\n    yield takeEvery(DETAIL_COLLECTION_BANNER_REQUEST, detailCollectionBannerSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchCollectionBannerSaga)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}