{"ast":null,"code":"var _jsxFileName = \"/var/www/html/i2pay-portal/src/app/components/common/EmailTemplateEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport EmailEditor from \"react-email-editor\";\nimport { useSelector } from \"react-redux\";\nimport { EmailTemplateCurrency } from \"../../utils/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailTemplateEditor = ({\n  json,\n  onSaveData,\n  id\n}) => {\n  _s();\n  var _emailEditorRef$curre5;\n  const {\n    mode\n  } = useSelector(state => state.persist);\n  let emailEditorRef = useRef(null);\n\n  // const exportHtml = () => {\n  //     emailEditorRef?.current?.editor?.exportHtml((data) => {\n  //         const { design, html } = data;\n  //         console.log(\"exportHtml\", html);\n  //     });\n  // };\n\n  const customPaymentButton = [{\n    name: \"phone\",\n    enabled: false\n  }, {\n    name: \"email\",\n    enabled: false\n  }, {\n    name: \"sms\",\n    enabled: false\n  }, {\n    name: \"my_custom_link_type\",\n    label: \"Payment Button\",\n    attrs: {\n      href: `${process.env.REACT_APP_API_URL}email/campaign/pay?amount={{amount}}&currency={{currency}}&id=${id}`,\n      target: \"_blank\"\n    },\n    fields: [{\n      name: \"amount\",\n      label: \"Amount\",\n      defaultValue: \"\",\n      inputType: \"number\",\n      minValue: 0,\n      placeholderText: null,\n      options: []\n    }, {\n      name: \"currency\",\n      label: \"Currency\",\n      defaultValue: \"INR\",\n      inputType: null,\n      placeholderText: null,\n      options: EmailTemplateCurrency\n    }]\n  }];\n  useEffect(() => {\n    var _emailEditorRef$curre, _emailEditorRef$curre2, _emailEditorRef$curre3, _emailEditorRef$curre4;\n    emailEditorRef === null || emailEditorRef === void 0 ? void 0 : (_emailEditorRef$curre = emailEditorRef.current) === null || _emailEditorRef$curre === void 0 ? void 0 : (_emailEditorRef$curre2 = _emailEditorRef$curre.editor) === null || _emailEditorRef$curre2 === void 0 ? void 0 : _emailEditorRef$curre2.loadDesign(json);\n    emailEditorRef === null || emailEditorRef === void 0 ? void 0 : (_emailEditorRef$curre3 = emailEditorRef.current) === null || _emailEditorRef$curre3 === void 0 ? void 0 : (_emailEditorRef$curre4 = _emailEditorRef$curre3.editor) === null || _emailEditorRef$curre4 === void 0 ? void 0 : _emailEditorRef$curre4.setLinkTypes(customPaymentButton);\n    onSaveData(emailEditorRef);\n  }, [emailEditorRef === null || emailEditorRef === void 0 ? void 0 : (_emailEditorRef$curre5 = emailEditorRef.current) === null || _emailEditorRef$curre5 === void 0 ? void 0 : _emailEditorRef$curre5.editor]);\n  const onLoad = () => {\n    // editor instance is created\n    // you can load your template here;\n    // const templateJson = {};\n    // emailEditorRef.current.editor.loadDesign(templateJson);\n    if (emailEditorRef !== null && emailEditorRef !== void 0 && emailEditorRef.current) {\n      var _emailEditorRef$curre6, _emailEditorRef$curre7, _emailEditorRef$curre8, _emailEditorRef$curre9;\n      emailEditorRef === null || emailEditorRef === void 0 ? void 0 : (_emailEditorRef$curre6 = emailEditorRef.current) === null || _emailEditorRef$curre6 === void 0 ? void 0 : (_emailEditorRef$curre7 = _emailEditorRef$curre6.editor) === null || _emailEditorRef$curre7 === void 0 ? void 0 : _emailEditorRef$curre7.loadDesign(json);\n      emailEditorRef === null || emailEditorRef === void 0 ? void 0 : (_emailEditorRef$curre8 = emailEditorRef.current) === null || _emailEditorRef$curre8 === void 0 ? void 0 : (_emailEditorRef$curre9 = _emailEditorRef$curre8.editor) === null || _emailEditorRef$curre9 === void 0 ? void 0 : _emailEditorRef$curre9.setLinkTypes(customPaymentButton);\n      onSaveData(emailEditorRef);\n    }\n  };\n  const onReady = () => {\n    // editor is ready\n    // console.log(\"onReady\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EmailEditor, {\n      minHeight: \"calc(100vh - 54px)\",\n      appearance: {\n        theme: mode === \"dark\" ? \"dark\" : \"light\",\n        panels: {\n          tools: {\n            dock: \"left\"\n          }\n        }\n      },\n      ref: emailEditorRef,\n      onLoad: onLoad,\n      onReady: onReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailTemplateEditor, \"hEmlc+iu5GpeQX+mEnB2Iy93kHE=\", false, function () {\n  return [useSelector];\n});\n_c = EmailTemplateEditor;\nexport default EmailTemplateEditor;\nvar _c;\n$RefreshReg$(_c, \"EmailTemplateEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","EmailEditor","useSelector","EmailTemplateCurrency","jsxDEV","_jsxDEV","EmailTemplateEditor","json","onSaveData","id","_s","_emailEditorRef$curre5","mode","state","persist","emailEditorRef","customPaymentButton","name","enabled","label","attrs","href","process","env","REACT_APP_API_URL","target","fields","defaultValue","inputType","minValue","placeholderText","options","_emailEditorRef$curre","_emailEditorRef$curre2","_emailEditorRef$curre3","_emailEditorRef$curre4","current","editor","loadDesign","setLinkTypes","onLoad","_emailEditorRef$curre6","_emailEditorRef$curre7","_emailEditorRef$curre8","_emailEditorRef$curre9","onReady","children","minHeight","appearance","theme","panels","tools","dock","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/components/common/EmailTemplateEditor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport EmailEditor from \"react-email-editor\";\nimport { useSelector } from \"react-redux\";\nimport { EmailTemplateCurrency } from \"../../utils/currency\";\n\nconst EmailTemplateEditor = ({ json, onSaveData, id }) => {\n    const { mode } = useSelector((state) => state.persist);\n\n    let emailEditorRef = useRef(null);\n\n    // const exportHtml = () => {\n    //     emailEditorRef?.current?.editor?.exportHtml((data) => {\n    //         const { design, html } = data;\n    //         console.log(\"exportHtml\", html);\n    //     });\n    // };\n\n    const customPaymentButton = [\n        {\n            name: \"phone\",\n            enabled: false,\n        },\n        {\n            name: \"email\",\n            enabled: false,\n        },\n        {\n            name: \"sms\",\n            enabled: false,\n        },\n        {\n            name: \"my_custom_link_type\",\n            label: \"Payment Button\",\n            attrs: {\n                href: `${process.env.REACT_APP_API_URL}email/campaign/pay?amount={{amount}}&currency={{currency}}&id=${id}`,\n                target: \"_blank\",\n            },\n            fields: [\n                {\n                    name: \"amount\",\n                    label: \"Amount\",\n                    defaultValue: \"\",\n                    inputType: \"number\",\n                    minValue: 0,\n                    placeholderText: null,\n                    options: [],\n                },\n                {\n                    name: \"currency\",\n                    label: \"Currency\",\n                    defaultValue: \"INR\",\n                    inputType: null,\n                    placeholderText: null,\n                    options: EmailTemplateCurrency,\n                },\n            ],\n        },\n    ];\n\n    useEffect(() => {\n        emailEditorRef?.current?.editor?.loadDesign(json);\n        emailEditorRef?.current?.editor?.setLinkTypes(customPaymentButton);\n        onSaveData(emailEditorRef);\n    }, [emailEditorRef?.current?.editor]);\n\n    const onLoad = () => {\n        // editor instance is created\n        // you can load your template here;\n        // const templateJson = {};\n        // emailEditorRef.current.editor.loadDesign(templateJson);\n        if (emailEditorRef?.current) {\n            emailEditorRef?.current?.editor?.loadDesign(json);\n            emailEditorRef?.current?.editor?.setLinkTypes(customPaymentButton);\n            onSaveData(emailEditorRef);\n        }\n    };\n\n    const onReady = () => {\n        // editor is ready\n        // console.log(\"onReady\");\n    };\n\n    return (\n        <div>\n            {/* <div>\n                <button onClick={exportHtml}>Export HTML</button>\n            </div> */}\n\n            <EmailEditor\n                minHeight={\"calc(100vh - 54px)\"}\n                appearance={{\n                    theme: mode === \"dark\" ? \"dark\" : \"light\",\n                    panels: {\n                        tools: {\n                            dock: \"left\",\n                        },\n                    },\n                }}\n                ref={emailEditorRef}\n                onLoad={onLoad}\n                onReady={onReady}\n            />\n        </div>\n    );\n};\n\nexport default EmailTemplateEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}