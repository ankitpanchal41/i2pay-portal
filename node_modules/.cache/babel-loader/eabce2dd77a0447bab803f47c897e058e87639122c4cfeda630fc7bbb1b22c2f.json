{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nexport const setProfilePic = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.profileUpdate, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const editProfile = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.editUpdate, payload);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const verifyMobileOtp = async (payload, loginToken = null) => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.verifyMobileOtp, payload, false, {}, loginToken);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const resendOtp = async (payload, loginToken = null) => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.resendProfileOTP, payload, false, {}, loginToken);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const emailVerify = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.emailVerify, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const changeVerificationFlag = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.changeVerificationFlag, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const forgetGoogleAuthenticator = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.forgetGoogleAuthenticator, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","Rest","setProfilePic","payload","data","post","profileUpdate","response","responseCode","error","editProfile","editUpdate","verifyMobileOtp","loginToken","resendOtp","resendProfileOTP","emailVerify","changeVerificationFlag","forgetGoogleAuthenticator"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/Profile.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\n\nexport const setProfilePic = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.profileUpdate, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const editProfile = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.editUpdate, payload);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const verifyMobileOtp = async (payload, loginToken = null) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.verifyMobileOtp, payload, false, {}, loginToken);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const resendOtp = async (payload, loginToken = null) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.resendProfileOTP, payload, false, {}, loginToken);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\n\nexport const emailVerify = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.emailVerify, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const changeVerificationFlag = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.changeVerificationFlag, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const forgetGoogleAuthenticator = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.forgetGoogleAuthenticator, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}