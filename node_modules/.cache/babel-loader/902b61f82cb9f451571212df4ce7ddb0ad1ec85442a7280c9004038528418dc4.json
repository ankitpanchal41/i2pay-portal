{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addEmailCampaignData } from \"../../../redux/services/EmailCampaign\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step3 = ({\n  id\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const initialValues = {\n    content: \"\"\n  };\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const onSubmit = async values => {\n    setIsSubmiting(true);\n    const payload = {\n      ...values,\n      step: 3,\n      id\n    };\n    const response = await addEmailCampaignData(payload);\n    if ((response === null || response === void 0 ? void 0 : response.responseCode) === 200) {\n      navigate(\"/email-campaigns\");\n    }\n    setIsSubmiting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Step3, \"7AV9niWlhZvoorFb2vmZ5is/+20=\", false, function () {\n  return [useNavigate];\n});\n_c = Step3;\nexport default Step3;\nvar _c;\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"names":["React","useState","useNavigate","addEmailCampaignData","Fragment","_Fragment","jsxDEV","_jsxDEV","Step3","id","_s","navigate","initialValues","content","isSubmiting","setIsSubmiting","onSubmit","values","payload","step","response","responseCode","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/pages/EmailCampaigns/Create/Step3.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addEmailCampaignData } from \"../../../redux/services/EmailCampaign\";\n\nconst Step3 = ({ id }) => {\n    const navigate = useNavigate();\n    const initialValues = {\n        content: \"\",\n    };\n    const [isSubmiting, setIsSubmiting] = useState(false);\n\n    const onSubmit = async (values) => {\n        setIsSubmiting(true);\n\n        const payload = { ...values, step: 3, id };\n\n        const response = await addEmailCampaignData(payload);\n\n        if (response?.responseCode === 200) {\n            navigate(\"/email-campaigns\");\n        }\n        setIsSubmiting(false);\n    };\n\n    return <></>;\n};\nexport default Step3;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,oBAAoB,QAAQ,uCAAuC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,aAAa,GAAG;IAClBC,OAAO,EAAE;EACb,CAAC;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,QAAQ,GAAG,MAAOC,MAAM,IAAK;IAC/BF,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMG,OAAO,GAAG;MAAE,GAAGD,MAAM;MAAEE,IAAI,EAAE,CAAC;MAAEV;IAAG,CAAC;IAE1C,MAAMW,QAAQ,GAAG,MAAMjB,oBAAoB,CAACe,OAAO,CAAC;IAEpD,IAAI,CAAAE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,YAAY,MAAK,GAAG,EAAE;MAChCV,QAAQ,CAAC,kBAAkB,CAAC;IAChC;IACAI,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBAAOR,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAChB,CAAC;AAACK,EAAA,CArBIF,KAAK;EAAA,QACUN,WAAW;AAAA;AAAAoB,EAAA,GAD1Bd,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}