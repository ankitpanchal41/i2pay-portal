{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { ADD_WEBHOOK_REQUEST, ADD_WEBHOOK_RESPONSE, DELETE_WEBHOOK_REQUEST, DELETE_WEBHOOK_RESPONSE, GET_WEBHOOK_REQUEST, GET_WEBHOOK_RESPONSE, UPDATE_WEBHOOK_REQUEST, UPDATE_WEBHOOK_RESPONSE, DETAIL_WEBHOOK_REQUEST, DETAIL_WEBHOOK_RESPONSE, GET_WEBHOOK_LOGS_REQUEST, GET_WEBHOOK_LOGS_RESPONSE, TEST_WEBHOOK_REQUEST, TEST_WEBHOOK_RESPONSE } from \"../actions/Webhook\";\nimport { addWebhookData, deleteWebhookData, getWebhookData, updateWebhookData, detailWebhookData, getWebhookLogsData, testWebhookData } from \"../services/Webhook\";\nfunction* getWebhookSaga(data) {\n  try {\n    const result = yield call(getWebhookData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_WEBHOOK_RESPONSE,\n        payload: {\n          webhook: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* addWebhookSaga(action) {\n  try {\n    const result = yield call(addWebhookData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_WEBHOOK_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteWebhookSaga(action) {\n  // return;\n  try {\n    const result = yield call(deleteWebhookData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_WEBHOOK_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateWebhookSaga(action) {\n  try {\n    const result = yield call(updateWebhookData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_WEBHOOK_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailWebhookSaga(action) {\n  try {\n    const result = yield call(detailWebhookData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_WEBHOOK_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* getWebhookLogsSaga(data) {\n  try {\n    const result = yield call(getWebhookLogsData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_WEBHOOK_LOGS_RESPONSE,\n        payload: {\n          webhookLogs: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* testWebhookSaga(action) {\n  try {\n    const result = yield call(testWebhookData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: TEST_WEBHOOK_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchWebhookSaga() {\n  yield takeEvery(GET_WEBHOOK_REQUEST, getWebhookSaga);\n  yield takeEvery(ADD_WEBHOOK_REQUEST, addWebhookSaga);\n  yield takeEvery(DELETE_WEBHOOK_REQUEST, deleteWebhookSaga);\n  yield takeEvery(UPDATE_WEBHOOK_REQUEST, updateWebhookSaga);\n  yield takeEvery(DETAIL_WEBHOOK_REQUEST, detailWebhookSaga);\n  yield takeEvery(GET_WEBHOOK_LOGS_REQUEST, getWebhookLogsSaga);\n  yield takeEvery(TEST_WEBHOOK_REQUEST, testWebhookSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchWebhookSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","ADD_WEBHOOK_REQUEST","ADD_WEBHOOK_RESPONSE","DELETE_WEBHOOK_REQUEST","DELETE_WEBHOOK_RESPONSE","GET_WEBHOOK_REQUEST","GET_WEBHOOK_RESPONSE","UPDATE_WEBHOOK_REQUEST","UPDATE_WEBHOOK_RESPONSE","DETAIL_WEBHOOK_REQUEST","DETAIL_WEBHOOK_RESPONSE","GET_WEBHOOK_LOGS_REQUEST","GET_WEBHOOK_LOGS_RESPONSE","TEST_WEBHOOK_REQUEST","TEST_WEBHOOK_RESPONSE","addWebhookData","deleteWebhookData","getWebhookData","updateWebhookData","detailWebhookData","getWebhookLogsData","testWebhookData","getWebhookSaga","data","result","responseCode","type","payload","webhook","paginate","error","callback","addWebhookSaga","action","navigateState","callBack","deleteWebhookSaga","_action$payload","id","updateWebhookSaga","detailWebhookSaga","navigateListing","getWebhookLogsSaga","webhookLogs","testWebhookSaga","watchWebhookSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/Webhook.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport {\n    ADD_WEBHOOK_REQUEST,\n    ADD_WEBHOOK_RESPONSE,\n    DELETE_WEBHOOK_REQUEST,\n    DELETE_WEBHOOK_RESPONSE,\n    GET_WEBHOOK_REQUEST,\n    GET_WEBHOOK_RESPONSE,\n    UPDATE_WEBHOOK_REQUEST,\n    UPDATE_WEBHOOK_RESPONSE,\n    DETAIL_WEBHOOK_REQUEST,\n    DETAIL_WEBHOOK_RESPONSE,\n    GET_WEBHOOK_LOGS_REQUEST,\n    GET_WEBHOOK_LOGS_RESPONSE,\n    TEST_WEBHOOK_REQUEST,\n    TEST_WEBHOOK_RESPONSE,\n} from \"../actions/Webhook\";\nimport {\n    addWebhookData,\n    deleteWebhookData,\n    getWebhookData,\n    updateWebhookData,\n    detailWebhookData,\n    getWebhookLogsData,\n    testWebhookData,\n} from \"../services/Webhook\";\n\nfunction* getWebhookSaga(data) {\n    try {\n        const result = yield call(getWebhookData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_WEBHOOK_RESPONSE,\n                payload: { webhook: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* addWebhookSaga(action) {\n    try {\n        const result = yield call(addWebhookData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_WEBHOOK_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteWebhookSaga(action) {\n    // return;\n    try {\n        const result = yield call(deleteWebhookData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_WEBHOOK_RESPONSE,\n                data: result,\n                id: action?.payload?.id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateWebhookSaga(action) {\n    try {\n        const result = yield call(updateWebhookData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_WEBHOOK_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailWebhookSaga(action) {\n    try {\n        const result = yield call(detailWebhookData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_WEBHOOK_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* getWebhookLogsSaga(data) {\n    try {\n        const result = yield call(getWebhookLogsData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_WEBHOOK_LOGS_RESPONSE,\n                payload: { webhookLogs: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* testWebhookSaga(action) {\n    try {\n        const result = yield call(testWebhookData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: TEST_WEBHOOK_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchWebhookSaga() {\n    yield takeEvery(GET_WEBHOOK_REQUEST, getWebhookSaga);\n    yield takeEvery(ADD_WEBHOOK_REQUEST, addWebhookSaga);\n    yield takeEvery(DELETE_WEBHOOK_REQUEST, deleteWebhookSaga);\n    yield takeEvery(UPDATE_WEBHOOK_REQUEST, updateWebhookSaga);\n    yield takeEvery(DETAIL_WEBHOOK_REQUEST, detailWebhookSaga);\n    yield takeEvery(GET_WEBHOOK_LOGS_REQUEST, getWebhookLogsSaga);\n    yield takeEvery(TEST_WEBHOOK_REQUEST, testWebhookSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchWebhookSaga)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AACpE,SACIC,mBAAmB,EACnBC,oBAAoB,EACpBC,sBAAsB,EACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,sBAAsB,EACtBC,uBAAuB,EACvBC,sBAAsB,EACtBC,uBAAuB,EACvBC,wBAAwB,EACxBC,yBAAyB,EACzBC,oBAAoB,EACpBC,qBAAqB,QAClB,oBAAoB;AAC3B,SACIC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,QACZ,qBAAqB;AAE5B,UAAUC,cAAcA,CAACC,IAAI,EAAE;EAC3B,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMxB,IAAI,CAACiB,cAAc,EAAEM,IAAI,CAAC;IAC/C,IAAIC,MAAM,CAACC,YAAY,KAAK,GAAG,EAAE;MAC7B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAEpB,oBAAoB;QAC1BqB,OAAO,EAAE;UAAEC,OAAO,EAAEJ,MAAM,CAACD,IAAI;UAAEM,QAAQ,EAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK;QAAS;MAChE,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUC,cAAcA,CAACC,MAAM,EAAE;EAC7B,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMxB,IAAI,CAACe,cAAc,EAAEkB,MAAM,CAACN,OAAO,CAAC;IACzD,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAExB,oBAAoB;QAC1BqB,IAAI,EAAEC;MACV,CAAC,CAAC;MACFS,MAAM,CAACC,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUC,iBAAiBA,CAACH,MAAM,EAAE;EAChC;EACA,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMxB,IAAI,CAACgB,iBAAiB,EAAEiB,MAAM,CAACN,OAAO,CAAC;IAC5D,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAAA,IAAAY,eAAA;MAC9B,MAAMvC,GAAG,CAAC;QACN4B,IAAI,EAAEtB,uBAAuB;QAC7BmB,IAAI,EAAEC,MAAM;QACZc,EAAE,EAAEL,MAAM,aAANA,MAAM,wBAAAI,eAAA,GAANJ,MAAM,CAAEN,OAAO,cAAAU,eAAA,uBAAfA,eAAA,CAAiBC;MACzB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOR,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,OAAO,UAAUI,iBAAiBA,CAACN,MAAM,EAAE;EACvC,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMxB,IAAI,CAACkB,iBAAiB,EAAEe,MAAM,CAACN,OAAO,CAAC;IAC5D,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAElB,uBAAuB;QAC7Be,IAAI,EAAEC;MACV,CAAC,CAAC;MACFS,MAAM,CAACC,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUK,iBAAiBA,CAACP,MAAM,EAAE;EAChC,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMxB,IAAI,CAACmB,iBAAiB,EAAEc,MAAM,CAACN,OAAO,CAAC;IAE5D,IAAIH,MAAM,KAAK,GAAG,IAAIS,MAAM,CAACQ,eAAe,EAAE;MAC1CR,MAAM,CAACQ,eAAe,CAAC,CAAC;MACxB,OAAO,KAAK;IAChB;IAEA,IAAI,CAAAjB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAEhB,uBAAuB;QAC7Ba,IAAI,EAAEC;MACV,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUO,kBAAkBA,CAACnB,IAAI,EAAE;EAC/B,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMxB,IAAI,CAACoB,kBAAkB,EAAEG,IAAI,CAAC;IACnD,IAAIC,MAAM,CAACC,YAAY,KAAK,GAAG,EAAE;MAC7B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAEd,yBAAyB;QAC/Be,OAAO,EAAE;UAAEgB,WAAW,EAAEnB,MAAM,CAACD,IAAI;UAAEM,QAAQ,EAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK;QAAS;MACpE,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUa,eAAeA,CAACX,MAAM,EAAE;EAC9B,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMxB,IAAI,CAACqB,eAAe,EAAEY,MAAM,CAACN,OAAO,CAAC;IAC1D,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAM3B,GAAG,CAAC;QACN4B,IAAI,EAAEZ,qBAAqB;QAC3BS,IAAI,EAAEC;MACV,CAAC,CAAC;MACFS,MAAM,CAACC,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUU,gBAAgBA,CAAA,EAAG;EACzB,MAAM9C,SAAS,CAACM,mBAAmB,EAAEiB,cAAc,CAAC;EACpD,MAAMvB,SAAS,CAACE,mBAAmB,EAAE+B,cAAc,CAAC;EACpD,MAAMjC,SAAS,CAACI,sBAAsB,EAAEiC,iBAAiB,CAAC;EAC1D,MAAMrC,SAAS,CAACQ,sBAAsB,EAAEgC,iBAAiB,CAAC;EAC1D,MAAMxC,SAAS,CAACU,sBAAsB,EAAE+B,iBAAiB,CAAC;EAC1D,MAAMzC,SAAS,CAACY,wBAAwB,EAAE+B,kBAAkB,CAAC;EAC7D,MAAM3C,SAAS,CAACc,oBAAoB,EAAE+B,eAAe,CAAC;AAC1D;AAEA,eAAe,UAAUE,QAAQA,CAAA,EAAG;EAChC,MAAMlD,GAAG,CAAC,CAACC,IAAI,CAACgD,gBAAgB,CAAC,CAAC,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}