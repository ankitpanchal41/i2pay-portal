{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { addAPIKeyData, deleteAPIKeyData, getAPIKeyData } from \"../services/APIKey\";\nimport { ADD_API_KEY_REQUEST, ADD_API_KEY_RESPONSE, DELETE_API_KEY_REQUEST, DELETE_API_KEY_RESPONSE, GET_API_KEY_REQUEST, GET_API_KEY_RESPONSE } from \"../actions/APIKey\";\nfunction* getAPIKeySaga(action) {\n  try {\n    const result = yield call(getAPIKeyData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: GET_API_KEY_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* addAPIKeySaga(action) {\n  try {\n    const result = yield call(addAPIKeyData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_API_KEY_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteAPIKeySaga(action) {\n  try {\n    const result = yield call(deleteAPIKeyData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DELETE_API_KEY_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchAPIKeySaga() {\n  yield takeEvery(GET_API_KEY_REQUEST, getAPIKeySaga);\n  yield takeEvery(ADD_API_KEY_REQUEST, addAPIKeySaga);\n  yield takeEvery(DELETE_API_KEY_REQUEST, deleteAPIKeySaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchAPIKeySaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","addAPIKeyData","deleteAPIKeyData","getAPIKeyData","ADD_API_KEY_REQUEST","ADD_API_KEY_RESPONSE","DELETE_API_KEY_REQUEST","DELETE_API_KEY_RESPONSE","GET_API_KEY_REQUEST","GET_API_KEY_RESPONSE","getAPIKeySaga","action","result","payload","responseCode","type","data","error","callBack","addAPIKeySaga","deleteAPIKeySaga","watchAPIKeySaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/APIKey.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\n\nimport { addAPIKeyData, deleteAPIKeyData, getAPIKeyData } from \"../services/APIKey\";\nimport {\n    ADD_API_KEY_REQUEST,\n    ADD_API_KEY_RESPONSE,\n    DELETE_API_KEY_REQUEST,\n    DELETE_API_KEY_RESPONSE,\n    GET_API_KEY_REQUEST,\n    GET_API_KEY_RESPONSE,\n} from \"../actions/APIKey\";\n\nfunction* getAPIKeySaga(action) {\n    try {\n        const result = yield call(getAPIKeyData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: GET_API_KEY_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* addAPIKeySaga(action) {\n    try {\n        const result = yield call(addAPIKeyData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_API_KEY_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteAPIKeySaga(action) {\n    try {\n        const result = yield call(deleteAPIKeyData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_API_KEY_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchAPIKeySaga() {\n    yield takeEvery(GET_API_KEY_REQUEST, getAPIKeySaga);\n    yield takeEvery(ADD_API_KEY_REQUEST, addAPIKeySaga);\n    yield takeEvery(DELETE_API_KEY_REQUEST, deleteAPIKeySaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchAPIKeySaga)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AAEpE,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,oBAAoB;AACnF,SACIC,mBAAmB,EACnBC,oBAAoB,EACpBC,sBAAsB,EACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,QACjB,mBAAmB;AAE1B,UAAUC,aAAaA,CAACC,MAAM,EAAE;EAC5B,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACG,aAAa,EAAEQ,MAAM,CAACE,OAAO,CAAC;IACxD,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAEN,oBAAoB;QAC1BO,IAAI,EAAEJ;MACV,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE,CAChB,CAAC,SAAS;IACNN,MAAM,CAACO,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUC,aAAaA,CAACR,MAAM,EAAE;EAC5B,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACC,aAAa,EAAEU,MAAM,CAACE,OAAO,CAAC;IACxD,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAEV,oBAAoB;QAC1BW,IAAI,EAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI;MAClB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNN,MAAM,CAACO,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUE,gBAAgBA,CAACT,MAAM,EAAE;EAC/B,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACE,gBAAgB,EAAES,MAAM,CAACE,OAAO,CAAC;IAC3D,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAER,uBAAuB;QAC7BS,IAAI,EAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI;MAClB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNN,MAAM,CAACO,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUG,eAAeA,CAAA,EAAG;EACxB,MAAMtB,SAAS,CAACS,mBAAmB,EAAEE,aAAa,CAAC;EACnD,MAAMX,SAAS,CAACK,mBAAmB,EAAEe,aAAa,CAAC;EACnD,MAAMpB,SAAS,CAACO,sBAAsB,EAAEc,gBAAgB,CAAC;AAC7D;AAEA,eAAe,UAAUE,QAAQA,CAAA,EAAG;EAChC,MAAM1B,GAAG,CAAC,CAACC,IAAI,CAACwB,eAAe,CAAC,CAAC,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}