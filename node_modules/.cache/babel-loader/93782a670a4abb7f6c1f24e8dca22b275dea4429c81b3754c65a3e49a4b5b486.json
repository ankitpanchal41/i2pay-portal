{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport RestStore from \"../../apiMethod/storeMethod\";\nexport const getCollectionBannerData = async (value, payload) => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await RestStore.post(`${apiRoutes.getCollectionBanner}?${searchString}`, value.payload);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const addCollectionBannerData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.createBlogCollectionBanner, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const deleteCollectionBannerData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.deleteBlogCollectionBanner, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const updateCollectionBannerData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.updateBlogCollectionBanner, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const detailCollectionBannerData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.detailBlogCollectionBanner, {\n      collection_banner_id: payload.id\n    });\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","RestStore","getCollectionBannerData","value","payload","searchString","currentPage","perPage","searchQuery","data","post","getCollectionBanner","error","addCollectionBannerData","createBlogCollectionBanner","response","responseCode","deleteCollectionBannerData","deleteBlogCollectionBanner","updateCollectionBannerData","updateBlogCollectionBanner","detailCollectionBannerData","detailBlogCollectionBanner","collection_banner_id","id"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/CollectionBanner.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport RestStore from \"../../apiMethod/storeMethod\";\n\nexport const getCollectionBannerData = async (value, payload) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await RestStore.post(`${apiRoutes.getCollectionBanner}?${searchString}`, value.payload);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const addCollectionBannerData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.createBlogCollectionBanner, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const deleteCollectionBannerData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.deleteBlogCollectionBanner, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const updateCollectionBannerData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.updateBlogCollectionBanner, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const detailCollectionBannerData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.detailBlogCollectionBanner, { collection_banner_id: payload.id });\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}