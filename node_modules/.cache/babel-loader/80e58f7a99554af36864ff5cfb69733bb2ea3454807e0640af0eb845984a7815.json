{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { ADD_CONTACT_REQUEST, ADD_CONTACT_RESPONSE, DELETE_CONTACT_REQUEST, DELETE_CONTACT_RESPONSE, GET_CONTACT_REQUEST, GET_CONTACT_RESPONSE, UPDATE_CONTACT_REQUEST, UPDATE_CONTACT_RESPONSE, DETAIL_CONTACT_REQUEST, DETAIL_CONTACT_RESPONSE } from \"../actions/Contact\";\nimport { getContactData, addContactData, deleteContactData, updateContactData, detailContactData } from \"../services/Contact\";\nfunction* getContactSaga(data) {\n  try {\n    const result = yield call(getContactData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_CONTACT_RESPONSE,\n        payload: {\n          contact: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* addContactSaga(action) {\n  try {\n    const result = yield call(addContactData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_CONTACT_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteContactSaga(action) {\n  try {\n    const result = yield call(deleteContactData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_CONTACT_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.contact_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateContactSaga(action) {\n  try {\n    const result = yield call(updateContactData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_CONTACT_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailContactSaga(action) {\n  try {\n    const result = yield call(detailContactData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_CONTACT_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchContactSaga() {\n  yield takeEvery(GET_CONTACT_REQUEST, getContactSaga);\n  yield takeEvery(ADD_CONTACT_REQUEST, addContactSaga);\n  yield takeEvery(DELETE_CONTACT_REQUEST, deleteContactSaga);\n  yield takeEvery(UPDATE_CONTACT_REQUEST, updateContactSaga);\n  yield takeEvery(DETAIL_CONTACT_REQUEST, detailContactSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchContactSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","ADD_CONTACT_REQUEST","ADD_CONTACT_RESPONSE","DELETE_CONTACT_REQUEST","DELETE_CONTACT_RESPONSE","GET_CONTACT_REQUEST","GET_CONTACT_RESPONSE","UPDATE_CONTACT_REQUEST","UPDATE_CONTACT_RESPONSE","DETAIL_CONTACT_REQUEST","DETAIL_CONTACT_RESPONSE","getContactData","addContactData","deleteContactData","updateContactData","detailContactData","getContactSaga","data","result","responseCode","type","payload","contact","paginate","error","callback","addContactSaga","action","navigateState","callBack","deleteContactSaga","_action$payload","id","contact_id","updateContactSaga","detailContactSaga","navigateListing","watchContactSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/Contact.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n    ADD_CONTACT_REQUEST,\n    ADD_CONTACT_RESPONSE,\n    DELETE_CONTACT_REQUEST,\n    DELETE_CONTACT_RESPONSE,\n    GET_CONTACT_REQUEST,\n    GET_CONTACT_RESPONSE,\n    UPDATE_CONTACT_REQUEST,\n    UPDATE_CONTACT_RESPONSE,\n    DETAIL_CONTACT_REQUEST,\n    DETAIL_CONTACT_RESPONSE,\n} from \"../actions/Contact\";\nimport { getContactData, addContactData, deleteContactData, updateContactData, detailContactData } from \"../services/Contact\";\n\nfunction* getContactSaga(data) {\n    try {\n        const result = yield call(getContactData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_CONTACT_RESPONSE,\n                payload: { contact: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* addContactSaga(action) {\n    try {\n        const result = yield call(addContactData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_CONTACT_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteContactSaga(action) {\n    try {\n        const result = yield call(deleteContactData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_CONTACT_RESPONSE,\n                data: result,\n                id: action?.payload?.contact_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateContactSaga(action) {\n    try {\n        const result = yield call(updateContactData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_CONTACT_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailContactSaga(action) {\n    try {\n        const result = yield call(detailContactData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_CONTACT_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchContactSaga() {\n    yield takeEvery(GET_CONTACT_REQUEST, getContactSaga);\n    yield takeEvery(ADD_CONTACT_REQUEST, addContactSaga);\n    yield takeEvery(DELETE_CONTACT_REQUEST, deleteContactSaga);\n    yield takeEvery(UPDATE_CONTACT_REQUEST, updateContactSaga);\n    yield takeEvery(DETAIL_CONTACT_REQUEST, detailContactSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchContactSaga)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}