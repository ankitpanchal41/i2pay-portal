{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { GET_CONNECTOR_TRANSACTION_CHART_REQUEST, GET_CONNECTOR_TRANSACTION_CHART_RESPONSE, GET_PAYMENT_METHOD_TRANSACTION_CHART_REQUEST, GET_PAYMENT_METHOD_TRANSACTION_CHART_RESPONSE, GET_TRANSACTION_CHART_REQUEST, GET_TRANSACTION_CHART_RESPONSE } from \"../actions/Chart\";\nimport { getConnectorTransactionChartData, getPaymentMethodTransactionChartData, getTransactionStatusChartData } from \"../services/Chart\";\nfunction* getTransactionStatusSaga(data) {\n  try {\n    const result = yield call(getTransactionStatusChartData, data === null || data === void 0 ? void 0 : data.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: GET_TRANSACTION_CHART_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* getConnectorTransactionSaga(data) {\n  try {\n    const result = yield call(getConnectorTransactionChartData, data === null || data === void 0 ? void 0 : data.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: GET_CONNECTOR_TRANSACTION_CHART_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* getPaymentMethodTransactionSaga(data) {\n  try {\n    const result = yield call(getPaymentMethodTransactionChartData, data === null || data === void 0 ? void 0 : data.payload);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_PAYMENT_METHOD_TRANSACTION_CHART_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* watchDashboardChatSaga() {\n  yield takeEvery(GET_TRANSACTION_CHART_REQUEST, getTransactionStatusSaga);\n  yield takeEvery(GET_CONNECTOR_TRANSACTION_CHART_REQUEST, getConnectorTransactionSaga);\n  yield takeEvery(GET_PAYMENT_METHOD_TRANSACTION_CHART_REQUEST, getPaymentMethodTransactionSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchDashboardChatSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","GET_CONNECTOR_TRANSACTION_CHART_REQUEST","GET_CONNECTOR_TRANSACTION_CHART_RESPONSE","GET_PAYMENT_METHOD_TRANSACTION_CHART_REQUEST","GET_PAYMENT_METHOD_TRANSACTION_CHART_RESPONSE","GET_TRANSACTION_CHART_REQUEST","GET_TRANSACTION_CHART_RESPONSE","getConnectorTransactionChartData","getPaymentMethodTransactionChartData","getTransactionStatusChartData","getTransactionStatusSaga","data","result","payload","responseCode","type","error","callback","getConnectorTransactionSaga","getPaymentMethodTransactionSaga","watchDashboardChatSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/ChatSaga.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport {\n    GET_CONNECTOR_TRANSACTION_CHART_REQUEST,\n    GET_CONNECTOR_TRANSACTION_CHART_RESPONSE,\n    GET_PAYMENT_METHOD_TRANSACTION_CHART_REQUEST,\n    GET_PAYMENT_METHOD_TRANSACTION_CHART_RESPONSE,\n    GET_TRANSACTION_CHART_REQUEST,\n    GET_TRANSACTION_CHART_RESPONSE,\n} from \"../actions/Chart\";\nimport { getConnectorTransactionChartData, getPaymentMethodTransactionChartData, getTransactionStatusChartData } from \"../services/Chart\";\n\nfunction* getTransactionStatusSaga(data) {\n    try {\n        const result = yield call(getTransactionStatusChartData, data?.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: GET_TRANSACTION_CHART_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* getConnectorTransactionSaga(data) {\n    try {\n        const result = yield call(getConnectorTransactionChartData, data?.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: GET_CONNECTOR_TRANSACTION_CHART_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* getPaymentMethodTransactionSaga(data) {\n    try {\n        const result = yield call(getPaymentMethodTransactionChartData, data?.payload);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_PAYMENT_METHOD_TRANSACTION_CHART_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* watchDashboardChatSaga() {\n    yield takeEvery(GET_TRANSACTION_CHART_REQUEST, getTransactionStatusSaga);\n    yield takeEvery(GET_CONNECTOR_TRANSACTION_CHART_REQUEST, getConnectorTransactionSaga);\n    yield takeEvery(GET_PAYMENT_METHOD_TRANSACTION_CHART_REQUEST, getPaymentMethodTransactionSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchDashboardChatSaga)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AACpE,SACIC,uCAAuC,EACvCC,wCAAwC,EACxCC,4CAA4C,EAC5CC,6CAA6C,EAC7CC,6BAA6B,EAC7BC,8BAA8B,QAC3B,kBAAkB;AACzB,SAASC,gCAAgC,EAAEC,oCAAoC,EAAEC,6BAA6B,QAAQ,mBAAmB;AAEzI,UAAUC,wBAAwBA,CAACC,IAAI,EAAE;EACrC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACS,6BAA6B,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAAC;IACvE,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAET,8BAA8B;QACpCK,IAAI,EAAEC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAED;MAClB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE,CAChB,CAAC,SAAS;IACNL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUC,2BAA2BA,CAACP,IAAI,EAAE;EACxC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACO,gCAAgC,EAAEI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAAC;IAC1E,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAEb,wCAAwC;QAC9CS,IAAI,EAAEC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAED;MAClB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE,CAChB,CAAC,SAAS;IACNL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUE,+BAA+BA,CAACR,IAAI,EAAE;EAC5C,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACQ,oCAAoC,EAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAAC;IAC9E,IAAID,MAAM,CAACE,YAAY,KAAK,GAAG,EAAE;MAC7B,MAAMhB,GAAG,CAAC;QACNiB,IAAI,EAAEX,6CAA6C;QACnDO,IAAI,EAAEC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAED;MAClB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE,CAChB,CAAC,SAAS;IACNL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUG,sBAAsBA,CAAA,EAAG;EAC/B,MAAMrB,SAAS,CAACM,6BAA6B,EAAEK,wBAAwB,CAAC;EACxE,MAAMX,SAAS,CAACE,uCAAuC,EAAEiB,2BAA2B,CAAC;EACrF,MAAMnB,SAAS,CAACI,4CAA4C,EAAEgB,+BAA+B,CAAC;AAClG;AAEA,eAAe,UAAUE,QAAQA,CAAA,EAAG;EAChC,MAAMzB,GAAG,CAAC,CAACC,IAAI,CAACuB,sBAAsB,CAAC,CAAC,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}