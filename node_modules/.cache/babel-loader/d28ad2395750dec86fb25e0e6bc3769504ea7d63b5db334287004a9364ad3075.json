{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nexport const autoPayoutReportsData = async value => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await Rest.post(`${apiRoutes.autoPayoutReports}?${searchString}`, value.payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n      return false;\n    }\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const autoPayoutSetting = async payload => {\n  try {\n    var _data$options;\n    const {\n      data\n    } = await Rest.post(apiRoutes.autoPayoutSetting, payload);\n    showToastMessage((data === null || data === void 0 ? void 0 : (_data$options = data.options) === null || _data$options === void 0 ? void 0 : _data$options.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getAutoPayoutSettingData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.get(apiRoutes.autoPayoutSetting, payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options2;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options2 = data.options) === null || _data$options2 === void 0 ? void 0 : _data$options2.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getPayoutConnectorData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.get(apiRoutes.payoutConnector, payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options3;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options3 = data.options) === null || _data$options3 === void 0 ? void 0 : _data$options3.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const generatePayout = async payload => {\n  try {\n    var _data$options4;\n    const {\n      data\n    } = await Rest.post(apiRoutes.generatePayout, payload);\n    showToastMessage((data === null || data === void 0 ? void 0 : (_data$options4 = data.options) === null || _data$options4 === void 0 ? void 0 : _data$options4.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), \"info\");\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getAutoPayoutDetailData = async reportId => {\n  try {\n    let searchString = \"\";\n    if (reportId) {\n      searchString += `invoice_no=${reportId}`;\n    }\n    const {\n      data\n    } = await Rest.get(`${apiRoutes.getAutoPayoutDetail}?${searchString}`);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options5;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options5 = data.options) === null || _data$options5 === void 0 ? void 0 : _data$options5.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getPayoutModeData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.getPayoutModeData, payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options6;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options6 = data.options) === null || _data$options6 === void 0 ? void 0 : _data$options6.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getPayoutModeFieldData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.getPayoutModeFieldData, payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options7;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options7 = data.options) === null || _data$options7 === void 0 ? void 0 : _data$options7.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getPayoutDetailData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.getPayoutDetailData, payload);\n    if ((data === null || data === void 0 ? void 0 : data.responseCode) !== 200) {\n      var _data$options8;\n      showToastMessage((data === null || data === void 0 ? void 0 : (_data$options8 = data.options) === null || _data$options8 === void 0 ? void 0 : _data$options8.validation[0]) || (data === null || data === void 0 ? void 0 : data.response), data === null || data === void 0 ? void 0 : data.responseCode);\n    }\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","Rest","autoPayoutReportsData","value","searchString","currentPage","perPage","searchQuery","data","post","autoPayoutReports","payload","responseCode","response","error","autoPayoutSetting","_data$options","options","validation","getAutoPayoutSettingData","get","_data$options2","getPayoutConnectorData","payoutConnector","_data$options3","generatePayout","_data$options4","getAutoPayoutDetailData","reportId","getAutoPayoutDetail","_data$options5","getPayoutModeData","_data$options6","getPayoutModeFieldData","_data$options7","getPayoutDetailData","_data$options8"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/AutoPayoutReports.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\n\nexport const autoPayoutReportsData = async (value) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await Rest.post(`${apiRoutes.autoPayoutReports}?${searchString}`, value.payload);\n\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.response, data?.responseCode);\n            return false;\n        }\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const autoPayoutSetting = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.autoPayoutSetting, payload);\n\n        showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getAutoPayoutSettingData = async (payload) => {\n    try {\n        const { data } = await Rest.get(apiRoutes.autoPayoutSetting, payload);\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getPayoutConnectorData = async (payload) => {\n    try {\n        const { data } = await Rest.get(apiRoutes.payoutConnector, payload);\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const generatePayout = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.generatePayout, payload);\n\n        showToastMessage(data?.options?.validation[0] || data?.response, \"info\");\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getAutoPayoutDetailData = async (reportId) => {\n    try {\n        let searchString = \"\";\n        if (reportId) {\n            searchString += `invoice_no=${reportId}`;\n        }\n\n        const { data } = await Rest.get(`${apiRoutes.getAutoPayoutDetail}?${searchString}`);\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getPayoutModeData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.getPayoutModeData, payload);\n\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getPayoutModeFieldData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.getPayoutModeFieldData, payload);\n\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getPayoutDetailData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.getPayoutDetailData, payload);\n\n        if (data?.responseCode !== 200) {\n            showToastMessage(data?.options?.validation[0] || data?.response, data?.responseCode);\n        }\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}