{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\n// import { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nexport const googleAuthPair = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.get(`${apiRoutes.googleAuthPair}AppName=Payomatix&AppInfo=${payload === null || payload === void 0 ? void 0 : payload.email}&SecretCode=${payload === null || payload === void 0 ? void 0 : payload.secretCode}`);\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const googleAuthValidate = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.get(`${apiRoutes.googleAuthValidate}Pin=${payload === null || payload === void 0 ? void 0 : payload.pin}&SecretCode=${payload === null || payload === void 0 ? void 0 : payload.secretCode}`);\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","Rest","googleAuthPair","payload","data","get","email","secretCode","error","googleAuthValidate","pin"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/GoogleAuthenticator.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\n// import { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\n\nexport const googleAuthPair = async (payload) => {\n    try {\n        const { data } = await Rest.get(\n            `${apiRoutes.googleAuthPair}AppName=Payomatix&AppInfo=${payload?.email}&SecretCode=${payload?.secretCode}`,\n        );\n\n        return data?.data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const googleAuthValidate = async (payload) => {\n    try {\n        const { data } = await Rest.get(`${apiRoutes.googleAuthValidate}Pin=${payload?.pin}&SecretCode=${payload?.secretCode}`);\n\n        return data?.data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC;AACA,OAAOC,IAAI,MAAM,uBAAuB;AAExC,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAC1B,GAAEL,SAAS,CAACE,cAAe,6BAA4BC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,KAAM,eAAcH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,UAAW,EAC7G,CAAC;IAED,OAAOH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,OAAO;MACHA,KAAK,EAAE,IAAI;MACXJ,IAAI,EAAEI;IACV,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAON,OAAO,IAAK;EACjD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACI,GAAG,CAAE,GAAEL,SAAS,CAACS,kBAAmB,OAAMN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,GAAI,eAAcP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,UAAW,EAAC,CAAC;IAEvH,OAAOH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,OAAO;MACHA,KAAK,EAAE,IAAI;MACXJ,IAAI,EAAEI;IACV,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}