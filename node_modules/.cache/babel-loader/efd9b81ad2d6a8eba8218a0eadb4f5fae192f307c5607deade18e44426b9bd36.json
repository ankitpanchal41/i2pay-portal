{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { ADD_BLOG_REQUEST, ADD_BLOG_RESPONSE, DELETE_BLOG_REQUEST, DELETE_BLOG_RESPONSE, GET_BLOG_REQUEST, GET_BLOG_RESPONSE, UPDATE_BLOG_REQUEST, UPDATE_BLOG_RESPONSE, DETAIL_BLOG_REQUEST, DETAIL_BLOG_RESPONSE } from \"../actions/Blogs\";\nimport { getBlogData, addBlogData, deleteBlogData, updateBlogData, detailBlogData } from \"../services/Blogs\";\nfunction* getBlogSaga(data) {\n  try {\n    const result = yield call(getBlogData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_BLOG_RESPONSE,\n        payload: {\n          blogs: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* addBlogSaga(action) {\n  try {\n    const result = yield call(addBlogData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_BLOG_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteBlogSaga(action) {\n  try {\n    const result = yield call(deleteBlogData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_BLOG_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.BLOG_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateBlogSaga(action) {\n  try {\n    const result = yield call(updateBlogData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_BLOG_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailBlogSaga(action) {\n  try {\n    const result = yield call(detailBlogData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_BLOG_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data[0]\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchBlogSaga() {\n  yield takeEvery(GET_BLOG_REQUEST, getBlogSaga);\n  yield takeEvery(ADD_BLOG_REQUEST, addBlogSaga);\n  yield takeEvery(DELETE_BLOG_REQUEST, deleteBlogSaga);\n  yield takeEvery(UPDATE_BLOG_REQUEST, updateBlogSaga);\n  yield takeEvery(DETAIL_BLOG_REQUEST, detailBlogSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchBlogSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","ADD_BLOG_REQUEST","ADD_BLOG_RESPONSE","DELETE_BLOG_REQUEST","DELETE_BLOG_RESPONSE","GET_BLOG_REQUEST","GET_BLOG_RESPONSE","UPDATE_BLOG_REQUEST","UPDATE_BLOG_RESPONSE","DETAIL_BLOG_REQUEST","DETAIL_BLOG_RESPONSE","getBlogData","addBlogData","deleteBlogData","updateBlogData","detailBlogData","getBlogSaga","data","result","responseCode","type","payload","blogs","paginate","error","callback","addBlogSaga","action","navigateState","callBack","deleteBlogSaga","_action$payload","id","BLOG_id","updateBlogSaga","detailBlogSaga","navigateListing","watchBlogSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/Blogs.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n    ADD_BLOG_REQUEST,\n    ADD_BLOG_RESPONSE,\n    DELETE_BLOG_REQUEST,\n    DELETE_BLOG_RESPONSE,\n    GET_BLOG_REQUEST,\n    GET_BLOG_RESPONSE,\n    UPDATE_BLOG_REQUEST,\n    UPDATE_BLOG_RESPONSE,\n    DETAIL_BLOG_REQUEST,\n    DETAIL_BLOG_RESPONSE,\n} from \"../actions/Blogs\";\nimport { getBlogData, addBlogData, deleteBlogData, updateBlogData, detailBlogData } from \"../services/Blogs\";\n\nfunction* getBlogSaga(data) {\n    try {\n        const result = yield call(getBlogData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_BLOG_RESPONSE,\n                payload: { blogs: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* addBlogSaga(action) {\n    try {\n        const result = yield call(addBlogData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_BLOG_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteBlogSaga(action) {\n    try {\n        const result = yield call(deleteBlogData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_BLOG_RESPONSE,\n                data: result,\n                id: action?.payload?.BLOG_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateBlogSaga(action) {\n    try {\n        const result = yield call(updateBlogData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_BLOG_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailBlogSaga(action) {\n    try {\n        const result = yield call(detailBlogData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_BLOG_RESPONSE,\n                data: result?.data[0],\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchBlogSaga() {\n    yield takeEvery(GET_BLOG_REQUEST, getBlogSaga);\n    yield takeEvery(ADD_BLOG_REQUEST, addBlogSaga);\n    yield takeEvery(DELETE_BLOG_REQUEST, deleteBlogSaga);\n    yield takeEvery(UPDATE_BLOG_REQUEST, updateBlogSaga);\n    yield takeEvery(DETAIL_BLOG_REQUEST, detailBlogSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchBlogSaga)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AAEpE,SACIC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,oBAAoB,EACpBC,gBAAgB,EAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,EACnBC,oBAAoB,QACjB,kBAAkB;AACzB,SAASC,WAAW,EAAEC,WAAW,EAAEC,cAAc,EAAEC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAE5G,UAAUC,WAAWA,CAACC,IAAI,EAAE;EACxB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMlB,IAAI,CAACW,WAAW,EAAEM,IAAI,CAAC;IAC5C,IAAIC,MAAM,CAACC,YAAY,KAAK,GAAG,EAAE;MAC7B,MAAMrB,GAAG,CAAC;QACNsB,IAAI,EAAEd,iBAAiB;QACvBe,OAAO,EAAE;UAAEC,KAAK,EAAEJ,MAAM,CAACD,IAAI;UAAEM,QAAQ,EAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK;QAAS;MAC9D,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUC,WAAWA,CAACC,MAAM,EAAE;EAC1B,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMlB,IAAI,CAACY,WAAW,EAAEe,MAAM,CAACN,OAAO,CAAC;IACtD,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMrB,GAAG,CAAC;QACNsB,IAAI,EAAElB,iBAAiB;QACvBe,IAAI,EAAEC;MACV,CAAC,CAAC;MACFS,MAAM,CAACC,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUC,cAAcA,CAACH,MAAM,EAAE;EAC7B,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMlB,IAAI,CAACa,cAAc,EAAEc,MAAM,CAACN,OAAO,CAAC;IACzD,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAAA,IAAAY,eAAA;MAC9B,MAAMjC,GAAG,CAAC;QACNsB,IAAI,EAAEhB,oBAAoB;QAC1Ba,IAAI,EAAEC,MAAM;QACZc,EAAE,EAAEL,MAAM,aAANA,MAAM,wBAAAI,eAAA,GAANJ,MAAM,CAAEN,OAAO,cAAAU,eAAA,uBAAfA,eAAA,CAAiBE;MACzB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOT,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,OAAO,UAAUK,cAAcA,CAACP,MAAM,EAAE;EACpC,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMlB,IAAI,CAACc,cAAc,EAAEa,MAAM,CAACN,OAAO,CAAC;IACzD,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMrB,GAAG,CAAC;QACNsB,IAAI,EAAEZ,oBAAoB;QAC1BS,IAAI,EAAEC;MACV,CAAC,CAAC;MACFS,MAAM,CAACC,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUM,cAAcA,CAACR,MAAM,EAAE;EAC7B,IAAI;IACA,MAAMT,MAAM,GAAG,MAAMlB,IAAI,CAACe,cAAc,EAAEY,MAAM,CAACN,OAAO,CAAC;IAEzD,IAAIH,MAAM,KAAK,GAAG,IAAIS,MAAM,CAACS,eAAe,EAAE;MAC1CT,MAAM,CAACS,eAAe,CAAC,CAAC;MACxB,OAAO,KAAK;IAChB;IAEA,IAAI,CAAAlB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,YAAY,MAAK,GAAG,EAAE;MAC9B,MAAMrB,GAAG,CAAC;QACNsB,IAAI,EAAEV,oBAAoB;QAC1BO,IAAI,EAAEC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAED,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE,CAChB,CAAC,SAAS;IACNG,MAAM,CAACE,QAAQ,CAAC,CAAC;EACrB;AACJ;AAEA,UAAUQ,aAAaA,CAAA,EAAG;EACtB,MAAMtC,SAAS,CAACM,gBAAgB,EAAEW,WAAW,CAAC;EAC9C,MAAMjB,SAAS,CAACE,gBAAgB,EAAEyB,WAAW,CAAC;EAC9C,MAAM3B,SAAS,CAACI,mBAAmB,EAAE2B,cAAc,CAAC;EACpD,MAAM/B,SAAS,CAACQ,mBAAmB,EAAE2B,cAAc,CAAC;EACpD,MAAMnC,SAAS,CAACU,mBAAmB,EAAE0B,cAAc,CAAC;AACxD;AAEA,eAAe,UAAUG,QAAQA,CAAA,EAAG;EAChC,MAAM1C,GAAG,CAAC,CAACC,IAAI,CAACwC,aAAa,CAAC,CAAC,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}