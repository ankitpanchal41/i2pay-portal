{"ast":null,"code":"var _jsxFileName = \"/var/www/html/i2pay-portal/src/app/pages/SetNewPassword/index.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport Input from \"../../components/common/forms/Input\";\nimport { changePasswordEnd } from \"../../redux/actions/PersistActions\";\nimport { setNewPasswordValidation } from \"../../utils/validationSchema\";\nimport { handleChangePassword } from \"../../redux/services/AuthService\";\nimport MiniLoader from \"../../components/common/MiniLoader\";\nimport PasswordCheck from \"../../components/common/PasswordCheck\";\nimport { checkStatusForPassword } from \"../../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  oldPassword: \"\",\n  newPassword: \"\",\n  confirmPassword: \"\"\n};\nconst SetNewPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isSubmiting, setIsSubmiting] = React.useState(false);\n  const onSubmit = useCallback(async (values, formikBag) => {\n    if (isSubmiting) return;\n    try {\n      setIsSubmiting(true);\n      const payload = {\n        password: values.newPassword,\n        old_password: values.oldPassword,\n        confirm_password: values.confirmPassword,\n        first_time_login: false\n      };\n      const data = await handleChangePassword(payload);\n      if ((data === null || data === void 0 ? void 0 : data.responseCode) === 200) {\n        dispatch(changePasswordEnd());\n        formikBag === null || formikBag === void 0 ? void 0 : formikBag.resetForm();\n      }\n    } catch (error) {} finally {\n      setIsSubmiting(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: setNewPasswordValidation,\n    onSubmit: onSubmit,\n    validateOnMount: true,\n    children: ({\n      handleSubmit,\n      errors,\n      values,\n      setFieldValue,\n      touched,\n      isValid\n    }) => {\n      const {\n        strength,\n        result\n      } = checkStatusForPassword(values === null || values === void 0 ? void 0 : values.newPassword);\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-y mt-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-12 gap-4 gap-y-5 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intro-y col-span-12 sm:col-span-12\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                isRequiredField: true,\n                type: \"password\",\n                className: \"intro-x login__input form-control py-2 px-3 block\",\n                placeholder: \"Old Password\",\n                label: \"Old Password\",\n                name: \"oldPassword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                isRequiredField: true,\n                type: \"password\",\n                className: \"intro-x login__input form-control py-2 px-3 block\",\n                placeholder: \"New Password\",\n                label: \"New Password\",\n                name: \"newPassword\",\n                containerClassName: \"mt-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(PasswordCheck, {\n                strength: strength,\n                result: result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                isRequiredField: true,\n                type: \"password\",\n                className: \"intro-x login__input form-control py-2 px-3 block\",\n                placeholder: \"Confirm Password\",\n                label: \"Confirm Password\",\n                name: \"confirmPassword\",\n                containerClassName: \"mt-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"intro-x mt-5 xl:mt-8 justify-end flex\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary py-3 px-4 w-32 xl:mr-3 align-top\",\n              onClick: handleSubmit,\n              disabled: !isValid || isSubmiting,\n              children: [\"Save\", /*#__PURE__*/_jsxDEV(MiniLoader, {\n                isLoading: isSubmiting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SetNewPassword, \"9QegTIHj6XU4/XbKhTltQjfukm0=\", false, function () {\n  return [useDispatch];\n});\n_c = SetNewPassword;\nexport default SetNewPassword;\nvar _c;\n$RefreshReg$(_c, \"SetNewPassword\");","map":{"version":3,"names":["React","useCallback","useDispatch","Formik","Form","Input","changePasswordEnd","setNewPasswordValidation","handleChangePassword","MiniLoader","PasswordCheck","checkStatusForPassword","jsxDEV","_jsxDEV","initialValues","oldPassword","newPassword","confirmPassword","SetNewPassword","_s","dispatch","isSubmiting","setIsSubmiting","useState","onSubmit","values","formikBag","payload","password","old_password","confirm_password","first_time_login","data","responseCode","resetForm","error","validationSchema","validateOnMount","children","handleSubmit","errors","setFieldValue","touched","isValid","strength","result","className","isRequiredField","type","placeholder","label","name","fileName","_jsxFileName","lineNumber","columnNumber","containerClassName","onClick","disabled","isLoading","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/pages/SetNewPassword/index.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport Input from \"../../components/common/forms/Input\";\nimport { changePasswordEnd } from \"../../redux/actions/PersistActions\";\nimport { setNewPasswordValidation } from \"../../utils/validationSchema\";\nimport { handleChangePassword } from \"../../redux/services/AuthService\";\nimport MiniLoader from \"../../components/common/MiniLoader\";\nimport PasswordCheck from \"../../components/common/PasswordCheck\";\nimport { checkStatusForPassword } from \"../../utils/helper\";\n\nconst initialValues = { oldPassword: \"\", newPassword: \"\", confirmPassword: \"\" };\n\nconst SetNewPassword = () => {\n    const dispatch = useDispatch();\n    const [isSubmiting, setIsSubmiting] = React.useState(false);\n\n    const onSubmit = useCallback(async (values, formikBag) => {\n        if (isSubmiting) return;\n        try {\n            setIsSubmiting(true);\n            const payload = {\n                password: values.newPassword,\n                old_password: values.oldPassword,\n                confirm_password: values.confirmPassword,\n                first_time_login: false,\n            };\n\n            const data = await handleChangePassword(payload);\n            if (data?.responseCode === 200) {\n                dispatch(changePasswordEnd());\n\n                formikBag?.resetForm();\n            }\n        } catch (error) {\n        } finally {\n            setIsSubmiting(false);\n        }\n    }, []);\n\n    return (\n        <Formik initialValues={initialValues} validationSchema={setNewPasswordValidation} onSubmit={onSubmit} validateOnMount>\n            {({ handleSubmit, errors, values, setFieldValue, touched, isValid }) => {\n                const { strength, result } = checkStatusForPassword(values?.newPassword);\n\n                return (\n                    <Form>\n                        <div className=\"intro-y mt-12\">\n                            <div className=\"grid grid-cols-12 gap-4 gap-y-5 mt-5\">\n                                <div className=\"intro-y col-span-12 sm:col-span-12\">\n                                    <Input\n                                        isRequiredField\n                                        type=\"password\"\n                                        className=\"intro-x login__input form-control py-2 px-3 block\"\n                                        placeholder=\"Old Password\"\n                                        label=\"Old Password\"\n                                        name=\"oldPassword\"\n                                    />\n                                    <Input\n                                        isRequiredField\n                                        type=\"password\"\n                                        className=\"intro-x login__input form-control py-2 px-3 block\"\n                                        placeholder=\"New Password\"\n                                        label=\"New Password\"\n                                        name=\"newPassword\"\n                                        containerClassName=\"mt-4\"\n                                    />\n                                    <PasswordCheck strength={strength} result={result} />\n                                    <Input\n                                        isRequiredField\n                                        type=\"password\"\n                                        className=\"intro-x login__input form-control py-2 px-3 block\"\n                                        placeholder=\"Confirm Password\"\n                                        label=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        containerClassName=\"mt-4\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"intro-x mt-5 xl:mt-8 justify-end flex\">\n                                <button\n                                    className=\"btn btn-primary py-3 px-4 w-32 xl:mr-3 align-top\"\n                                    onClick={handleSubmit}\n                                    disabled={!isValid || isSubmiting}>\n                                    Save\n                                    <MiniLoader isLoading={isSubmiting} />\n                                </button>\n                            </div>\n                        </div>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default SetNewPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}