{"ast":null,"code":"import { callApi } from \".\";\nimport RestStore from \"../../apiMethod/storeMethod\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport { apiRoutes } from \"./apiRoutes\";\nexport const productCategoryListHandle = async (value, payload) => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await RestStore.post(`${apiRoutes.getProductsCategoryList}?${searchString}`, payload);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const productCategoryAddHandle = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.createProductCategory, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const productCategoryUpdateHandle = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.editProductCategory, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const productCategoryDeleteHandle = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.deleteProductCategory, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"names":["callApi","RestStore","showToastMessage","apiRoutes","productCategoryListHandle","value","payload","searchString","currentPage","perPage","searchQuery","data","post","getProductsCategoryList","error","productCategoryAddHandle","createProductCategory","response","responseCode","productCategoryUpdateHandle","editProductCategory","productCategoryDeleteHandle","deleteProductCategory"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/ProductCategory.js"],"sourcesContent":["import { callApi } from \".\";\nimport RestStore from \"../../apiMethod/storeMethod\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport { apiRoutes } from \"./apiRoutes\";\n\nexport const productCategoryListHandle = async (value, payload) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await RestStore.post(`${apiRoutes.getProductsCategoryList}?${searchString}`, payload);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const productCategoryAddHandle = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.createProductCategory, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const productCategoryUpdateHandle = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.editProductCategory, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const productCategoryDeleteHandle = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.deleteProductCategory, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,GAAG;AAC3B,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,KAAK;EAC/D,IAAI;IACA,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEG,WAAW,EAAE;MACpBD,YAAY,IAAK,QAAOF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,WAAY,EAAC;IAChD;IAEA,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEI,OAAO,EAAE;MAChBF,YAAY,IAAK,YAAWF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,OAAQ,EAAC;IAChD;IAEA,IAAI,CAAAJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAW,MAAK,EAAE,EAAE;MAC3BH,YAAY,IAAK,WAAUF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAY,EAAC;IACnD;IAEA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,SAAS,CAACW,IAAI,CAAE,GAAET,SAAS,CAACU,uBAAwB,IAAGN,YAAa,EAAC,EAAED,OAAO,CAAC;IAEtG,OAAOK,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAG,MAAOT,OAAO,IAAK;EACvD,IAAI;IACA,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMV,SAAS,CAACW,IAAI,CAACT,SAAS,CAACa,qBAAqB,EAAEV,OAAO,CAAC;IAC/EJ,gBAAgB,CAACS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,YAAY,CAAC;IAEpD,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMK,2BAA2B,GAAG,MAAOb,OAAO,IAAK;EAC1D,IAAI;IACA,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMV,SAAS,CAACW,IAAI,CAACT,SAAS,CAACiB,mBAAmB,EAAEd,OAAO,CAAC;IAC7EJ,gBAAgB,CAACS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,YAAY,CAAC;IAEpD,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMO,2BAA2B,GAAG,MAAOf,OAAO,IAAK;EAC1D,IAAI;IACA,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMV,SAAS,CAACW,IAAI,CAACT,SAAS,CAACmB,qBAAqB,EAAEhB,OAAO,CAAC;IAC/EJ,gBAAgB,CAACS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,YAAY,CAAC;IAEpD,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}