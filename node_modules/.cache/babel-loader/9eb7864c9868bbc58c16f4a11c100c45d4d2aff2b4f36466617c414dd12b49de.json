{"ast":null,"code":"import { GET_CONNECTOR_REQUEST, GET_CONNECTOR_RESPONSE, GET_CONNECTOR_SETTINGS_RESPONSE, GET_ENABLED_CONNECTOR_REQUEST, GET_ENABLED_CONNECTOR_RESPONSE, UPDATE_CONNECTOR_MODE_RESPONSE, UPDATE_CONNECTOR_RESPONSE, UPDATE_CONNECTOR_SETTINGS_RESPONSE } from \"../../actions/Connector\";\nconst initialState = {\n  connector: [],\n  enabledConnector: [],\n  settings: [],\n  currentPage: 1,\n  totalPage: 1,\n  perPage: 10\n};\nconst ConnectorReducer = (state = initialState, action) => {\n  var _action$payload, _action$payload2, _action$payload2$pagi, _action$payload3, _action$payload3$pagi, _action$payload4, _action$payload4$pagi, _action$payload5, _state$connector;\n  switch (action.type) {\n    case GET_CONNECTOR_REQUEST:\n      return {\n        ...state,\n        connector: [],\n        settings: []\n      };\n    case GET_CONNECTOR_RESPONSE:\n      return {\n        ...state,\n        settings: [],\n        connector: ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.connector) || [],\n        currentPage: Number(action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : (_action$payload2$pagi = _action$payload2.paginate) === null || _action$payload2$pagi === void 0 ? void 0 : _action$payload2$pagi.page) || 1,\n        totalPage: Number(action === null || action === void 0 ? void 0 : (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$pagi = _action$payload3.paginate) === null || _action$payload3$pagi === void 0 ? void 0 : _action$payload3$pagi.totalPage) || 1,\n        perPage: Number(action === null || action === void 0 ? void 0 : (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : (_action$payload4$pagi = _action$payload4.paginate) === null || _action$payload4$pagi === void 0 ? void 0 : _action$payload4$pagi.perPage) || 10\n      };\n    case GET_ENABLED_CONNECTOR_REQUEST:\n      return {\n        ...state,\n        enabledConnector: []\n      };\n    case GET_ENABLED_CONNECTOR_RESPONSE:\n      // alert(action.payload);\n      return {\n        ...state,\n        enabledConnector: ((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.enabledConnector) || []\n      };\n    case GET_CONNECTOR_SETTINGS_RESPONSE:\n      return {\n        ...state,\n        settings: (action === null || action === void 0 ? void 0 : action.data) || []\n      };\n    case UPDATE_CONNECTOR_MODE_RESPONSE:\n      const data = [];\n      state === null || state === void 0 ? void 0 : (_state$connector = state.connector) === null || _state$connector === void 0 ? void 0 : _state$connector.map(item => {\n        var _action$data;\n        if ((item === null || item === void 0 ? void 0 : item.id) === (action === null || action === void 0 ? void 0 : (_action$data = action.data) === null || _action$data === void 0 ? void 0 : _action$data.connector_id)) {\n          var _action$data2;\n          data.push({\n            ...item,\n            mode: action === null || action === void 0 ? void 0 : (_action$data2 = action.data) === null || _action$data2 === void 0 ? void 0 : _action$data2.mode\n          });\n        } else {\n          data.push(item);\n        }\n      });\n      return {\n        ...state,\n        connector: data\n      };\n    case UPDATE_CONNECTOR_RESPONSE:\n      return {\n        ...state\n      };\n    case UPDATE_CONNECTOR_SETTINGS_RESPONSE:\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\n_c = ConnectorReducer;\nexport default ConnectorReducer;\nvar _c;\n$RefreshReg$(_c, \"ConnectorReducer\");","map":{"version":3,"names":["GET_CONNECTOR_REQUEST","GET_CONNECTOR_RESPONSE","GET_CONNECTOR_SETTINGS_RESPONSE","GET_ENABLED_CONNECTOR_REQUEST","GET_ENABLED_CONNECTOR_RESPONSE","UPDATE_CONNECTOR_MODE_RESPONSE","UPDATE_CONNECTOR_RESPONSE","UPDATE_CONNECTOR_SETTINGS_RESPONSE","initialState","connector","enabledConnector","settings","currentPage","totalPage","perPage","ConnectorReducer","state","action","_action$payload","_action$payload2","_action$payload2$pagi","_action$payload3","_action$payload3$pagi","_action$payload4","_action$payload4$pagi","_action$payload5","_state$connector","type","payload","Number","paginate","page","data","map","item","_action$data","id","connector_id","_action$data2","push","mode","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/redux/reducers/Connector/index.js"],"sourcesContent":["import {\n    GET_CONNECTOR_REQUEST,\n    GET_CONNECTOR_RESPONSE,\n    GET_CONNECTOR_SETTINGS_RESPONSE,\n    GET_ENABLED_CONNECTOR_REQUEST,\n    GET_ENABLED_CONNECTOR_RESPONSE,\n    UPDATE_CONNECTOR_MODE_RESPONSE,\n    UPDATE_CONNECTOR_RESPONSE,\n    UPDATE_CONNECTOR_SETTINGS_RESPONSE,\n} from \"../../actions/Connector\";\n\nconst initialState = {\n    connector: [],\n    enabledConnector: [],\n    settings: [],\n    currentPage: 1,\n    totalPage: 1,\n    perPage: 10,\n};\n\nconst ConnectorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_CONNECTOR_REQUEST:\n            return {\n                ...state,\n                connector: [],\n                settings: [],\n            };\n\n        case GET_CONNECTOR_RESPONSE:\n            return {\n                ...state,\n                settings: [],\n                connector: action.payload?.connector || [],\n                currentPage: Number(action?.payload?.paginate?.page) || 1,\n                totalPage: Number(action?.payload?.paginate?.totalPage) || 1,\n                perPage: Number(action?.payload?.paginate?.perPage) || 10,\n            };\n\n        case GET_ENABLED_CONNECTOR_REQUEST:\n            return {\n                ...state,\n                enabledConnector: [],\n            };\n\n        case GET_ENABLED_CONNECTOR_RESPONSE:\n            // alert(action.payload);\n            return {\n                ...state,\n                enabledConnector: action.payload?.enabledConnector || [],\n            };\n\n        case GET_CONNECTOR_SETTINGS_RESPONSE:\n            return {\n                ...state,\n                settings: action?.data || [],\n            };\n\n        case UPDATE_CONNECTOR_MODE_RESPONSE:\n            const data = [];\n            state?.connector?.map((item) => {\n                if (item?.id === action?.data?.connector_id) {\n                    data.push({ ...item, mode: action?.data?.mode });\n                } else {\n                    data.push(item);\n                }\n            });\n\n            return {\n                ...state,\n                connector: data,\n            };\n\n        case UPDATE_CONNECTOR_RESPONSE:\n            return {\n                ...state,\n            };\n\n        case UPDATE_CONNECTOR_SETTINGS_RESPONSE:\n            return {\n                ...state,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default ConnectorReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}