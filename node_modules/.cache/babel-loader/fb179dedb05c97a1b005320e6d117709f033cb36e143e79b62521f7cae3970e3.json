{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { addPayButton, deletePayButton, detailPayButton, listPayButton, updatePayButton } from \"../services/PayButton\";\nimport { ADD_PAY_BUTTON_REQUEST, ADD_PAY_BUTTON_RESPONSE, DELETE_PAY_BUTTON_REQUEST, DELETE_PAY_BUTTON_RESPONSE, DETAIL_PAY_BUTTON_REQUEST, DETAIL_PAY_BUTTON_RESPONSE, EDIT_PAY_BUTTON_REQUEST, EDIT_PAY_BUTTON_RESPONSE, LIST_PAY_BUTTON_REQUEST, LIST_PAY_BUTTON_RESPONSE } from \"../types/PayButton\";\nfunction* addPayButtonSaga(action) {\n  try {\n    const result = yield call(addPayButton, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: ADD_PAY_BUTTON_RESPONSE,\n        data: result\n      });\n      action === null || action === void 0 ? void 0 : action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* editPayButtonSaga(action) {\n  try {\n    const result = yield call(updatePayButton, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: EDIT_PAY_BUTTON_RESPONSE,\n        data: result\n      });\n      action === null || action === void 0 ? void 0 : action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deletePayButtonSaga(action) {\n  try {\n    const result = yield call(deletePayButton, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_PAY_BUTTON_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.payButton_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* detailPayButtonSaga(action) {\n  try {\n    const result = yield call(detailPayButton, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: DETAIL_PAY_BUTTON_RESPONSE,\n        data: result\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\n\n// function* listPayButtonSaga(action) {\n//     try {\n//         const result = yield call(listPayButton, action.payload);\n//         if (result?.responseCode === 200) {\n\n//             yield put({\n//                 type: LIST_PAY_BUTTON_RESPONSE,\n//                 data: result,\n//             });\n//         }\n//     } catch (error) {\n\n//     } finally {\n//         action.callBack();\n//     }\n// }\n\nfunction* listPayButtonSaga(data) {\n  try {\n    const result = yield call(listPayButton, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: LIST_PAY_BUTTON_RESPONSE,\n        payload: {\n          payButtonList: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* watchSetStoreFrontSaga() {\n  yield takeEvery(ADD_PAY_BUTTON_REQUEST, addPayButtonSaga);\n  yield takeEvery(LIST_PAY_BUTTON_REQUEST, listPayButtonSaga);\n  yield takeEvery(EDIT_PAY_BUTTON_REQUEST, editPayButtonSaga);\n  yield takeEvery(DELETE_PAY_BUTTON_REQUEST, deletePayButtonSaga);\n  yield takeEvery(DETAIL_PAY_BUTTON_REQUEST, detailPayButtonSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchSetStoreFrontSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","addPayButton","deletePayButton","detailPayButton","listPayButton","updatePayButton","ADD_PAY_BUTTON_REQUEST","ADD_PAY_BUTTON_RESPONSE","DELETE_PAY_BUTTON_REQUEST","DELETE_PAY_BUTTON_RESPONSE","DETAIL_PAY_BUTTON_REQUEST","DETAIL_PAY_BUTTON_RESPONSE","EDIT_PAY_BUTTON_REQUEST","EDIT_PAY_BUTTON_RESPONSE","LIST_PAY_BUTTON_REQUEST","LIST_PAY_BUTTON_RESPONSE","addPayButtonSaga","action","result","payload","responseCode","type","data","navigateState","error","callBack","editPayButtonSaga","deletePayButtonSaga","_action$payload","id","payButton_id","detailPayButtonSaga","navigateListing","listPayButtonSaga","payButtonList","paginate","callback","watchSetStoreFrontSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/PayButton.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { addPayButton, deletePayButton, detailPayButton, listPayButton, updatePayButton } from \"../services/PayButton\";\nimport {\n    ADD_PAY_BUTTON_REQUEST,\n    ADD_PAY_BUTTON_RESPONSE,\n    DELETE_PAY_BUTTON_REQUEST,\n    DELETE_PAY_BUTTON_RESPONSE,\n    DETAIL_PAY_BUTTON_REQUEST,\n    DETAIL_PAY_BUTTON_RESPONSE,\n    EDIT_PAY_BUTTON_REQUEST,\n    EDIT_PAY_BUTTON_RESPONSE,\n    LIST_PAY_BUTTON_REQUEST,\n    LIST_PAY_BUTTON_RESPONSE,\n} from \"../types/PayButton\";\n\nfunction* addPayButtonSaga(action) {\n    try {\n        const result = yield call(addPayButton, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: ADD_PAY_BUTTON_RESPONSE,\n                data: result,\n            });\n            action?.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* editPayButtonSaga(action) {\n    try {\n        const result = yield call(updatePayButton, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: EDIT_PAY_BUTTON_RESPONSE,\n                data: result,\n            });\n            action?.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deletePayButtonSaga(action) {\n    try {\n        const result = yield call(deletePayButton, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_PAY_BUTTON_RESPONSE,\n                data: result,\n                id: action?.payload?.payButton_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* detailPayButtonSaga(action) {\n    try {\n        const result = yield call(detailPayButton, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DETAIL_PAY_BUTTON_RESPONSE,\n                data: result,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\n// function* listPayButtonSaga(action) {\n//     try {\n//         const result = yield call(listPayButton, action.payload);\n//         if (result?.responseCode === 200) {\n\n//             yield put({\n//                 type: LIST_PAY_BUTTON_RESPONSE,\n//                 data: result,\n//             });\n//         }\n//     } catch (error) {\n\n//     } finally {\n//         action.callBack();\n//     }\n// }\n\nfunction* listPayButtonSaga(data) {\n    try {\n        const result = yield call(listPayButton, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: LIST_PAY_BUTTON_RESPONSE,\n                payload: { payButtonList: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* watchSetStoreFrontSaga() {\n    yield takeEvery(ADD_PAY_BUTTON_REQUEST, addPayButtonSaga);\n    yield takeEvery(LIST_PAY_BUTTON_REQUEST, listPayButtonSaga);\n    yield takeEvery(EDIT_PAY_BUTTON_REQUEST, editPayButtonSaga);\n    yield takeEvery(DELETE_PAY_BUTTON_REQUEST, deletePayButtonSaga);\n    yield takeEvery(DETAIL_PAY_BUTTON_REQUEST, detailPayButtonSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchSetStoreFrontSaga)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}