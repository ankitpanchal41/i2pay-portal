{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport RestStore from \"../../apiMethod/storeMethod\";\n\n// export const getStoreFrontListData = async (payload) => {\n//     try {\n//         const { data } = await RestStore.post(apiRoutes.getStoreList, payload);\n//\n//         return data;\n//     } catch (error) {\n//         return {\n//             error: true,\n//             data: error,\n//         };\n//     }\n// };\n\nexport const getStoreFrontListData = async (value, payload) => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await RestStore.post(`${apiRoutes.getStoreList}?${searchString}`, value.payload);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const addStoreFrontData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.creteStore, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const editStoreFrontData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.updateStore, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const updateStoreFrontStatus = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.updateStoreStatus, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const deleteStoreFrontData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.deleteStore, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getStoreFrontData = async payload => {\n  try {\n    const {\n      data\n    } = await RestStore.post(apiRoutes.getStore, payload);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","RestStore","getStoreFrontListData","value","payload","searchString","currentPage","perPage","searchQuery","data","post","getStoreList","error","addStoreFrontData","creteStore","response","responseCode","editStoreFrontData","updateStore","updateStoreFrontStatus","updateStoreStatus","deleteStoreFrontData","deleteStore","getStoreFrontData","getStore"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/storeFront.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport RestStore from \"../../apiMethod/storeMethod\";\n\n// export const getStoreFrontListData = async (payload) => {\n//     try {\n//         const { data } = await RestStore.post(apiRoutes.getStoreList, payload);\n//\n//         return data;\n//     } catch (error) {\n//         return {\n//             error: true,\n//             data: error,\n//         };\n//     }\n// };\n\n\nexport const getStoreFrontListData = async (value, payload) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await RestStore.post(`${apiRoutes.getStoreList}?${searchString}`, value.payload);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nexport const addStoreFrontData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.creteStore, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const editStoreFrontData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.updateStore, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const updateStoreFrontStatus = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.updateStoreStatus, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const deleteStoreFrontData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.deleteStore, payload);\n        showToastMessage(data?.response, data?.responseCode);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getStoreFrontData = async (payload) => {\n    try {\n        const { data } = await RestStore.post(apiRoutes.getStore, payload);\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}