{"ast":null,"code":"import axios from \"axios\";\nimport { store } from \"../store/index\";\n\n// const client = axios.create({\n//     baseURL: \"https://admin.payomatix.com/\",\n// });\n\n// client.interceptors.request.use(\n//     (config) => {\n//         const { userData } = store.getState()?.persist;\n//         const token = userData?.data?.token;\n\n//         if (token) {\n//             config.headers.authorization = `Bearer ${token}`;\n//         }\n\n//         return config;\n//     },\n//     (error) => Promise.reject(error),\n// );\n\nexport async function callApi(path, options, params, baseURL) {\n  var _store$getState, _userData$data;\n  // if (params) {\n  //     path += serializeQueryParams(params);\n  // }\n\n  const {\n    userData\n  } = (_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : _store$getState.persist;\n  const token = userData === null || userData === void 0 ? void 0 : (_userData$data = userData.data) === null || _userData$data === void 0 ? void 0 : _userData$data.token;\n  const authConfig = {};\n  if (token) {\n    authConfig.authorization = `Bearer ${token}`;\n  }\n  try {\n    const response = await axios({\n      url: (baseURL || \"https://admin.payomatix.com/\") + path,\n      ...options,\n      headers: {\n        ...options.headers,\n        ...authConfig\n      }\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","store","callApi","path","options","params","baseURL","_store$getState","_userData$data","userData","getState","persist","token","data","authConfig","authorization","response","url","headers","error"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { store } from \"../store/index\";\n\n// const client = axios.create({\n//     baseURL: \"https://admin.payomatix.com/\",\n// });\n\n// client.interceptors.request.use(\n//     (config) => {\n//         const { userData } = store.getState()?.persist;\n//         const token = userData?.data?.token;\n\n//         if (token) {\n//             config.headers.authorization = `Bearer ${token}`;\n//         }\n\n//         return config;\n//     },\n//     (error) => Promise.reject(error),\n// );\n\nexport async function callApi(path, options, params, baseURL) {\n    // if (params) {\n    //     path += serializeQueryParams(params);\n    // }\n\n    const { userData } = store.getState()?.persist;\n    const token = userData?.data?.token;\n\n    const authConfig = {};\n    if (token) {\n        authConfig.authorization = `Bearer ${token}`;\n    }\n\n    try {\n        const response = await axios({\n            url: (baseURL || \"https://admin.payomatix.com/\") + path,\n            ...options,\n            headers: {\n                ...options.headers,\n                ...authConfig,\n            },\n        });\n\n        return response;\n    } catch (error) {\n        throw error;\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,OAAOA,CAACC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAAA,IAAAC,eAAA,EAAAC,cAAA;EAC1D;EACA;EACA;;EAEA,MAAM;IAAEC;EAAS,CAAC,IAAAF,eAAA,GAAGN,KAAK,CAACS,QAAQ,CAAC,CAAC,cAAAH,eAAA,uBAAhBA,eAAA,CAAkBI,OAAO;EAC9C,MAAMC,KAAK,GAAGH,QAAQ,aAARA,QAAQ,wBAAAD,cAAA,GAARC,QAAQ,CAAEI,IAAI,cAAAL,cAAA,uBAAdA,cAAA,CAAgBI,KAAK;EAEnC,MAAME,UAAU,GAAG,CAAC,CAAC;EACrB,IAAIF,KAAK,EAAE;IACPE,UAAU,CAACC,aAAa,GAAI,UAASH,KAAM,EAAC;EAChD;EAEA,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAAC;MACzBiB,GAAG,EAAE,CAACX,OAAO,IAAI,8BAA8B,IAAIH,IAAI;MACvD,GAAGC,OAAO;MACVc,OAAO,EAAE;QACL,GAAGd,OAAO,CAACc,OAAO;QAClB,GAAGJ;MACP;IACJ,CAAC,CAAC;IAEF,OAAOE,QAAQ;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}