{"ast":null,"code":"import { all, fork, takeEvery, call } from \"redux-saga/effects\";\nimport { verifyToken } from \"../services/AuthService\";\nimport { VERIFY_TOKEN_START } from \"../types/Auth\";\nfunction* checkToken(data) {\n  try {\n    const payload = {\n      recaptcha: data === null || data === void 0 ? void 0 : data.payload,\n      server: process.env.NODE_ENV\n    };\n    const result = yield call(verifyToken, payload);\n  } catch (error) {}\n}\nfunction* watchVerifyTokenStart() {\n  yield takeEvery(VERIFY_TOKEN_START, checkToken);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchVerifyTokenStart)]);\n}","map":{"version":3,"names":["all","fork","takeEvery","call","verifyToken","VERIFY_TOKEN_START","checkToken","data","payload","recaptcha","server","process","env","NODE_ENV","result","error","watchVerifyTokenStart","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/AuthSaga.js"],"sourcesContent":["import { all, fork, takeEvery, call } from \"redux-saga/effects\";\nimport { verifyToken } from \"../services/AuthService\";\nimport { VERIFY_TOKEN_START } from \"../types/Auth\";\n\nfunction* checkToken(data) {\n    try {\n        const payload = {\n            recaptcha: data?.payload,\n            server: process.env.NODE_ENV,\n        };\n        const result = yield call(verifyToken, payload);\n    } catch (error) {}\n}\n\nfunction* watchVerifyTokenStart() {\n    yield takeEvery(VERIFY_TOKEN_START, checkToken);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchVerifyTokenStart)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AAC/D,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,kBAAkB,QAAQ,eAAe;AAElD,UAAUC,UAAUA,CAACC,IAAI,EAAE;EACvB,IAAI;IACA,MAAMC,OAAO,GAAG;MACZC,SAAS,EAAEF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,OAAO;MACxBE,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;IACxB,CAAC;IACD,MAAMC,MAAM,GAAG,MAAMX,IAAI,CAACC,WAAW,EAAEI,OAAO,CAAC;EACnD,CAAC,CAAC,OAAOO,KAAK,EAAE,CAAC;AACrB;AAEA,UAAUC,qBAAqBA,CAAA,EAAG;EAC9B,MAAMd,SAAS,CAACG,kBAAkB,EAAEC,UAAU,CAAC;AACnD;AAEA,eAAe,UAAUW,QAAQA,CAAA,EAAG;EAChC,MAAMjB,GAAG,CAAC,CAACC,IAAI,CAACe,qBAAqB,CAAC,CAAC,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}