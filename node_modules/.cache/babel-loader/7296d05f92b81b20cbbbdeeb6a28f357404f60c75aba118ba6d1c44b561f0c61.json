{"ast":null,"code":"var _jsxFileName = \"/var/www/html/i2pay-portal/src/app/components/common/Loader.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppLoader = ({\n  isLoading\n}) => {\n  _s();\n  const {\n    loading\n  } = useSelector(state => state.loader);\n  useEffect(() => {\n    if (loading) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style = \"\";\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading || isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed w-[100%] h-[100%] top-0 left-0 z-[100] flex justify-center items-center blurred-background\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        loading: true,\n        color: \"#1E3A8A\",\n        size: 55,\n        css: \"border-width: 4px;border-color: #1E3A8A !important;border-bottom-color: transparent !important;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n_s(AppLoader, \"lBEGihwj84A0HHPhDw41q8J0+C4=\", false, function () {\n  return [useSelector];\n});\n_c = AppLoader;\nexport default AppLoader;\nvar _c;\n$RefreshReg$(_c, \"AppLoader\");","map":{"version":3,"names":["useEffect","useSelector","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","AppLoader","isLoading","_s","loading","state","loader","document","body","style","overflow","children","className","color","size","css","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/components/common/Loader.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst AppLoader = ({ isLoading }) => {\n    const { loading } = useSelector((state) => state.loader);\n\n    useEffect(() => {\n        if (loading) {\n            document.body.style.overflow = \"hidden\";\n        } else {\n            document.body.style = \"\";\n        }\n    }, [loading]);\n\n    return (\n        <>\n            {loading || isLoading ? (\n                <div className=\"fixed w-[100%] h-[100%] top-0 left-0 z-[100] flex justify-center items-center blurred-background\">\n                    <ClipLoader\n                        loading={true}\n                        color=\"#1E3A8A\"\n                        size={55}\n                        css=\"border-width: 4px;border-color: #1E3A8A !important;border-bottom-color: transparent !important;\"\n                    />\n                </div>\n            ) : null}\n        </>\n    );\n};\n\nexport default AppLoader;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAExDZ,SAAS,CAAC,MAAM;IACZ,IAAIU,OAAO,EAAE;MACTG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAC3C,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,KAAK,GAAG,EAAE;IAC5B;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,oBACIN,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACKP,OAAO,IAAIF,SAAS,gBACjBJ,OAAA;MAAKc,SAAS,EAAC,kGAAkG;MAAAD,QAAA,eAC7Gb,OAAA,CAACF,UAAU;QACPQ,OAAO,EAAE,IAAK;QACdS,KAAK,EAAC,SAAS;QACfC,IAAI,EAAE,EAAG;QACTC,GAAG,EAAC;MAAiG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,GACN;EAAI,gBACV,CAAC;AAEX,CAAC;AAAChB,EAAA,CAzBIF,SAAS;EAAA,QACSN,WAAW;AAAA;AAAAyB,EAAA,GAD7BnB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}