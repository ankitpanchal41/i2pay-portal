{"ast":null,"code":"import { createElement } from 'react';\nvar getShapeProps = function getShapeProps(shapeInfo) {\n  var width = shapeInfo.width,\n    height = shapeInfo.height;\n  return function (type) {\n    var shapeOptions = {\n      rect: {\n        width: width,\n        height: height\n      },\n      circle: {\n        cx: Number(width) / 2,\n        cy: Number(height) / 2,\n        r: (Number(height) + Number(width)) / 4\n      }\n    };\n    return shapeOptions[type];\n  };\n};\nvar getSvgProps = function getSvgProps(shapeInfo) {\n  var width = shapeInfo.width,\n    height = shapeInfo.height;\n  return function (type) {\n    var svgProps = {\n      rect: {\n        width: width,\n        height: height\n      },\n      circle: {\n        width: width,\n        height: height\n      }\n    };\n    return svgProps[type];\n  };\n};\nvar PlaceholderLoading = function PlaceholderLoading(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    _ref$colorStart = _ref.colorStart,\n    colorStart = _ref$colorStart === void 0 ? '#f0f0f0' : _ref$colorStart,\n    _ref$colorEnd = _ref.colorEnd,\n    colorEnd = _ref$colorEnd === void 0 ? '#e0e0e0' : _ref$colorEnd,\n    shape = _ref.shape;\n  var ShapeElement = shape;\n  var shapeProps = getShapeProps({\n    width: width,\n    height: height\n  })(shape);\n  var svgProps = getSvgProps({\n    width: width,\n    height: height\n  })(shape);\n  return createElement(\"svg\", Object.assign({}, svgProps), createElement(ShapeElement, Object.assign({}, shapeProps, {\n    role: 'img',\n    \"data-testid\": \"shapeElement\",\n    fill: \"url(#linear-gradient)\"\n  })), createElement(\"defs\", null, createElement(\"linearGradient\", {\n    id: \"linear-gradient\",\n    x1: '0%',\n    y1: '0%',\n    x2: '100%',\n    y2: '0%'\n  }, createElement(\"stop\", {\n    offset: '0%',\n    stopColor: colorStart\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"-2; -2; 1\",\n    dur: \"2s\",\n    keyTimes: '0; 0.70; 1',\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: '50%',\n    stopColor: colorEnd\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"0; 0; 2\",\n    dur: \"2s\",\n    keyTimes: '0; 0.70; 1',\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: '100%',\n    stopColor: colorStart\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"0; 0; 3\",\n    dur: \"2s\",\n    keyTimes: '0; 0.90; 1',\n    repeatCount: \"indefinite\"\n  })))));\n};\nexport default PlaceholderLoading;","map":{"version":3,"names":["getShapeProps","shapeInfo","width","height","type","shapeOptions","rect","circle","cx","Number","cy","r","getSvgProps","svgProps","PlaceholderLoading","_ref","colorStart","_ref$colorStart","colorEnd","_ref$colorEnd","shape","ShapeElement","shapeProps","createElement","Object","assign","role","fill","id","x1","y1","x2","y2","offset","stopColor","attributeName","values","dur","keyTimes","repeatCount"],"sources":["/var/www/html/i2pay-portal/node_modules/react-placeholder-loading/src/utils.ts","/var/www/html/i2pay-portal/node_modules/react-placeholder-loading/src/PlaceholderLoading.tsx"],"sourcesContent":["import { ShapeInfo, AvailableShapes } from 'types';\n\nexport const getShapeProps = (shapeInfo: ShapeInfo) => {\n  const { width, height } = shapeInfo;\n  return (type: AvailableShapes) => {\n    const shapeOptions = {\n      rect: {\n        width,\n        height,\n      },\n      circle: {\n        cx: Number(width) / 2,\n        cy: Number(height) / 2,\n        r: (Number(height) + Number(width)) / 4,\n      },\n    };\n\n    return shapeOptions[type];\n  };\n};\n\nexport const getSvgProps = (shapeInfo: ShapeInfo) => {\n  const { width, height } = shapeInfo;\n  return (type: AvailableShapes) => {\n    const svgProps = {\n      rect: {\n        width,\n        height,\n      },\n      circle: {\n        width: width,\n        height: height,\n      },\n    };\n\n    return svgProps[type];\n  };\n};\n","import * as React from 'react';\nimport { IPlaceholderLoadingProps } from './types';\nimport { getShapeProps, getSvgProps } from './utils';\n\nconst PlaceholderLoading = ({\n  width,\n  height,\n  colorStart = '#f0f0f0',\n  colorEnd = '#e0e0e0',\n  shape,\n}: IPlaceholderLoadingProps) => {\n  const ShapeElement = shape;\n  const shapeProps = getShapeProps({ width, height })(shape);\n  const svgProps = getSvgProps({ width, height })(shape);\n\n  return (\n    <svg {...svgProps}>\n      <ShapeElement\n        {...shapeProps}\n        role='img'\n        data-testid=\"shapeElement\"\n        fill=\"url(#linear-gradient)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"linear-gradient\"\n          x1={'0%'}\n          y1={'0%'}\n          x2={'100%'}\n          y2={'0%'}\n        >\n          <stop offset={'0%'} stopColor={colorStart}>\n            <animate\n              attributeName=\"offset\"\n              values={`-2; -2; 1`}\n              dur=\"2s\"\n              keyTimes={'0; 0.70; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n          <stop offset={'50%'} stopColor={colorEnd}>\n            <animate\n              attributeName=\"offset\"\n              values={`0; 0; 2`}\n              dur=\"2s\"\n              keyTimes={'0; 0.70; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n          <stop offset={'100%'} stopColor={colorStart}>\n            <animate\n              attributeName=\"offset\"\n              values={`0; 0; 3`}\n              dur=\"2s\"\n              keyTimes={'0; 0.90; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default PlaceholderLoading;\n"],"mappings":";AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgBA,CAACC,SAAD;MACnBC,KAAA,GAAkBD,SAAA,CAAlBC,KAAA;IAAOC,MAAA,GAAWF,SAAA,CAAXE,MAAA;SACR,UAACC,IAAD;QACCC,YAAY,GAAG;MACnBC,IAAI,EAAE;QACJJ,KAAK,EAALA,KADI;QAEJC,MAAM,EAANA;OAHiB;MAKnBI,MAAM,EAAE;QACNC,EAAE,EAAEC,MAAM,CAACP,KAAD,CAAN,GAAgB,CADd;QAENQ,EAAE,EAAED,MAAM,CAACN,MAAD,CAAN,GAAiB,CAFf;QAGNQ,CAAC,EAAE,CAACF,MAAM,CAACN,MAAD,CAAN,GAAiBM,MAAM,CAACP,KAAD,CAAxB,IAAmC;;KAR1C;WAYOG,YAAY,CAACD,IAAD,CAAnB;GAbF;CAFK;AAmBP,IAAaQ,WAAW,GAAG,SAAdA,WAAcA,CAACX,SAAD;MACjBC,KAAA,GAAkBD,SAAA,CAAlBC,KAAA;IAAOC,MAAA,GAAWF,SAAA,CAAXE,MAAA;SACR,UAACC,IAAD;QACCS,QAAQ,GAAG;MACfP,IAAI,EAAE;QACJJ,KAAK,EAALA,KADI;QAEJC,MAAM,EAANA;OAHa;MAKfI,MAAM,EAAE;QACNL,KAAK,EAAEA,KADD;QAENC,MAAM,EAAEA;;KAPZ;WAWOU,QAAQ,CAACT,IAAD,CAAf;GAZF;CAFK;ACjBP,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqBA,CAAAC,IAAA;MACzBb,KAAA,GAAAa,IAAA,CAAAb,KAAA;IACAC,MAAA,GAAAY,IAAA,CAAAZ,MAAA;2BACAa,UAAA;IAAAA,UAAA,GAAAC,eAAA,cAAa,YAAAA,eAAA;yBACbC,QAAA;IAAAA,QAAA,GAAAC,aAAA,cAAW,YAAAA,aAAA;IACXC,KAAA,GAAAL,IAAA,CAAAK,KAAA;MAEMC,YAAY,GAAGD,KAArB;MACME,UAAU,GAAGtB,aAAa,CAAC;IAAEE,KAAK,EAALA,KAAF;IAASC,MAAM,EAANA;GAAV,CAAb,CAAiCiB,KAAjC,CAAnB;MACMP,QAAQ,GAAGD,WAAW,CAAC;IAAEV,KAAK,EAALA,KAAF;IAASC,MAAM,EAANA;GAAV,CAAX,CAA+BiB,KAA/B,CAAjB;SAGEG,aAAA,QAAAC,MAAA,CAAAC,MAAA,KAASZ,QAAA,CAAT,EACEU,aAAA,CAACF,YAAD,EAAAG,MAAA,CAAAC,MAAA,KACMH,UAAA;IACJI,IAAI,EAAC;mBACO;IACZC,IAAI,EAAC;IAJP,CADF,EAOEJ,aAAA,eACEA,aAAA;IACEK,EAAE,EAAC;IACHC,EAAE,EAAE;IACJC,EAAE,EAAE;IACJC,EAAE,EAAE;IACJC,EAAE,EAAE;GALN,EAOET,aAAA;IAAMU,MAAM,EAAE;IAAMC,SAAS,EAAElB;GAA/B,EACEO,aAAA;IACEY,aAAa,EAAC;IACdC,MAAM;IACNC,GAAG,EAAC;IACJC,QAAQ,EAAE;IACVC,WAAW,EAAC;GALd,CADF,CAPF,EAgBEhB,aAAA;IAAMU,MAAM,EAAE;IAAOC,SAAS,EAAEhB;GAAhC,EACEK,aAAA;IACEY,aAAa,EAAC;IACdC,MAAM;IACNC,GAAG,EAAC;IACJC,QAAQ,EAAE;IACVC,WAAW,EAAC;GALd,CADF,CAhBF,EAyBEhB,aAAA;IAAMU,MAAM,EAAE;IAAQC,SAAS,EAAElB;GAAjC,EACEO,aAAA;IACEY,aAAa,EAAC;IACdC,MAAM;IACNC,GAAG,EAAC;IACJC,QAAQ,EAAE;IACVC,WAAW,EAAC;GALd,CADF,CAzBF,CADF,CAPF,CADF;CAXF"},"metadata":{},"sourceType":"module","externalDependencies":[]}