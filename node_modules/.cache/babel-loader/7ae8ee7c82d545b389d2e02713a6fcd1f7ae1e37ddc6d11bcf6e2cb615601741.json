{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { GET_RULES_REQUEST, GET_RULES_RESPONSE, CREATE_RULES_REQUEST, CREATE_RULES_RESPONSE, UPDATE_RULES_STATUS_REQUEST, UPDATE_RULES_STATUS_RESPONSE, DELETE_RULES_REQUEST, DELETE_RULES_RESPONSE, GET_DETAIL_RULES_REQUEST, UPDATE_RULES_RESPONSE, GET_DETAIL_RULES_RESPONSE, UPDATE_RULES_REQUEST, UPDATE_RULES_PRIORITY_REQUEST, UPDATE_RULES_PRIORITY_RESPONSE } from \"../actions/Rules\";\nimport { getRulesData, deleteRule, setRulesStatusData, createRulesData, updateRulesData, getRulesDetailData, updateRulesPriorityData } from \"../services/Rules\";\nfunction* getRulesSaga(data) {\n  try {\n    const result = yield call(getRulesData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_RULES_RESPONSE,\n        payload: {\n          rules: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nexport function* getRulesDetailSaga(action) {\n  try {\n    const result = yield call(getRulesDetailData, action.payload);\n    if (result === 404 && action.navigateListing) {\n      action.navigateListing();\n      return false;\n    }\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: GET_DETAIL_RULES_RESPONSE,\n        data: result === null || result === void 0 ? void 0 : result.data\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* createRulesSaga(action) {\n  try {\n    const result = yield call(createRulesData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: CREATE_RULES_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateRulesStatusSaga(action) {\n  try {\n    const result = yield call(setRulesStatusData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_RULES_STATUS_RESPONSE,\n        data: result\n      });\n      action.returnResponse(result);\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateRulesSaga(action) {\n  try {\n    const result = yield call(updateRulesData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_RULES_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nexport function* updateRulesPrioritySaga(action) {\n  try {\n    const result = yield call(updateRulesPriorityData, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      yield put({\n        type: UPDATE_RULES_PRIORITY_RESPONSE,\n        data: result\n      });\n      action.navigateState();\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* deleteRuleSaga(action) {\n  try {\n    const result = yield call(deleteRule, action.payload);\n    if ((result === null || result === void 0 ? void 0 : result.responseCode) === 200) {\n      var _action$payload;\n      yield put({\n        type: DELETE_RULES_RESPONSE,\n        data: result,\n        id: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.rules_id\n      });\n    }\n  } catch (error) {} finally {\n    action.callBack();\n  }\n}\nfunction* watchRulesSaga() {\n  yield takeEvery(GET_RULES_REQUEST, getRulesSaga);\n  yield takeEvery(GET_DETAIL_RULES_REQUEST, getRulesDetailSaga);\n  yield takeEvery(CREATE_RULES_REQUEST, createRulesSaga);\n  yield takeEvery(UPDATE_RULES_STATUS_REQUEST, updateRulesStatusSaga);\n  yield takeEvery(UPDATE_RULES_REQUEST, updateRulesSaga);\n  yield takeEvery(UPDATE_RULES_PRIORITY_REQUEST, updateRulesPrioritySaga);\n  yield takeEvery(DELETE_RULES_REQUEST, deleteRuleSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchRulesSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","GET_RULES_REQUEST","GET_RULES_RESPONSE","CREATE_RULES_REQUEST","CREATE_RULES_RESPONSE","UPDATE_RULES_STATUS_REQUEST","UPDATE_RULES_STATUS_RESPONSE","DELETE_RULES_REQUEST","DELETE_RULES_RESPONSE","GET_DETAIL_RULES_REQUEST","UPDATE_RULES_RESPONSE","GET_DETAIL_RULES_RESPONSE","UPDATE_RULES_REQUEST","UPDATE_RULES_PRIORITY_REQUEST","UPDATE_RULES_PRIORITY_RESPONSE","getRulesData","deleteRule","setRulesStatusData","createRulesData","updateRulesData","getRulesDetailData","updateRulesPriorityData","getRulesSaga","data","result","responseCode","type","payload","rules","paginate","error","callback","getRulesDetailSaga","action","navigateListing","callBack","createRulesSaga","navigateState","updateRulesStatusSaga","returnResponse","updateRulesSaga","updateRulesPrioritySaga","deleteRuleSaga","_action$payload","id","rules_id","watchRulesSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/RulesSaga.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport {\n    GET_RULES_REQUEST,\n    GET_RULES_RESPONSE,\n    CREATE_RULES_REQUEST,\n    CREATE_RULES_RESPONSE,\n    UPDATE_RULES_STATUS_REQUEST,\n    UPDATE_RULES_STATUS_RESPONSE,\n    DELETE_RULES_REQUEST,\n    DELETE_RULES_RESPONSE,\n    GET_DETAIL_RULES_REQUEST,\n    UPDATE_RULES_RESPONSE,\n    GET_DETAIL_RULES_RESPONSE,\n    UPDATE_RULES_REQUEST,\n    UPDATE_RULES_PRIORITY_REQUEST,\n    UPDATE_RULES_PRIORITY_RESPONSE,\n} from \"../actions/Rules\";\n\nimport {\n    getRulesData,\n    deleteRule,\n    setRulesStatusData,\n    createRulesData,\n    updateRulesData,\n    getRulesDetailData,\n    updateRulesPriorityData,\n} from \"../services/Rules\";\n\nfunction* getRulesSaga(data) {\n    try {\n        const result = yield call(getRulesData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_RULES_RESPONSE,\n                payload: { rules: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nexport function* getRulesDetailSaga(action) {\n    try {\n        const result = yield call(getRulesDetailData, action.payload);\n\n        if (result === 404 && action.navigateListing) {\n            action.navigateListing();\n            return false;\n        }\n\n        if (result?.responseCode === 200) {\n            yield put({\n                type: GET_DETAIL_RULES_RESPONSE,\n                data: result?.data,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* createRulesSaga(action) {\n    try {\n        const result = yield call(createRulesData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: CREATE_RULES_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateRulesStatusSaga(action) {\n    try {\n        const result = yield call(setRulesStatusData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_RULES_STATUS_RESPONSE,\n                data: result,\n            });\n            action.returnResponse(result);\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateRulesSaga(action) {\n    try {\n        const result = yield call(updateRulesData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_RULES_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nexport function* updateRulesPrioritySaga(action) {\n    try {\n        const result = yield call(updateRulesPriorityData, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: UPDATE_RULES_PRIORITY_RESPONSE,\n                data: result,\n            });\n            action.navigateState();\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* deleteRuleSaga(action) {\n    try {\n        const result = yield call(deleteRule, action.payload);\n        if (result?.responseCode === 200) {\n            yield put({\n                type: DELETE_RULES_RESPONSE,\n                data: result,\n                id: action?.payload?.rules_id,\n            });\n        }\n    } catch (error) {\n    } finally {\n        action.callBack();\n    }\n}\n\nfunction* watchRulesSaga() {\n    yield takeEvery(GET_RULES_REQUEST, getRulesSaga);\n    yield takeEvery(GET_DETAIL_RULES_REQUEST, getRulesDetailSaga);\n    yield takeEvery(CREATE_RULES_REQUEST, createRulesSaga);\n    yield takeEvery(UPDATE_RULES_STATUS_REQUEST, updateRulesStatusSaga);\n    yield takeEvery(UPDATE_RULES_REQUEST, updateRulesSaga);\n    yield takeEvery(UPDATE_RULES_PRIORITY_REQUEST, updateRulesPrioritySaga);\n    yield takeEvery(DELETE_RULES_REQUEST, deleteRuleSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchRulesSaga)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}