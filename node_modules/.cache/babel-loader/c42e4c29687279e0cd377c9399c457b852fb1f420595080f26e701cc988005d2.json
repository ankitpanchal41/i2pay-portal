{"ast":null,"code":"import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nimport RestStore from \"../../apiMethod/storeMethod\";\nexport const getEmailCampaignData = async (value, payload) => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await Rest.get(`${apiRoutes.getEmailCampaign}?${searchString}`, value.payload);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const addEmailCampaignData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.createEmailCampaign, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const deleteEmailCampaignData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.deleteEmailCampaign, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const updateEmailCampaignData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.updateEmailCampaign, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const detailEmailCampaignData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.detailEmailCampaign, {\n      id: payload.id\n    });\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};\nexport const getEmailCampaignPreviewEmailListData = async (value, payload) => {\n  try {\n    let searchString = \"\";\n    if (value !== null && value !== void 0 && value.currentPage) {\n      searchString += `page=${value === null || value === void 0 ? void 0 : value.currentPage}`;\n    }\n    if (value !== null && value !== void 0 && value.perPage) {\n      searchString += `&perPage=${value === null || value === void 0 ? void 0 : value.perPage}`;\n    }\n    if ((value === null || value === void 0 ? void 0 : value.searchQuery) !== \"\") {\n      searchString += `&search=${value === null || value === void 0 ? void 0 : value.searchQuery}`;\n    }\n    const {\n      data\n    } = await Rest.post(`${apiRoutes.getEmailCampaignPreviewList}?${searchString}`, payload);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const emailCampaignSendEmailData = async payload => {\n  try {\n    const {\n      data\n    } = await Rest.post(apiRoutes.emailCampaignSendEmail, payload);\n    showToastMessage(data === null || data === void 0 ? void 0 : data.response, data === null || data === void 0 ? void 0 : data.responseCode);\n    return data;\n  } catch (error) {\n    return {\n      error: true,\n      data: error\n    };\n  }\n};","map":{"version":3,"names":["apiRoutes","showToastMessage","Rest","RestStore","getEmailCampaignData","value","payload","searchString","currentPage","perPage","searchQuery","data","get","getEmailCampaign","error","addEmailCampaignData","post","createEmailCampaign","response","responseCode","deleteEmailCampaignData","deleteEmailCampaign","updateEmailCampaignData","updateEmailCampaign","detailEmailCampaignData","detailEmailCampaign","id","getEmailCampaignPreviewEmailListData","getEmailCampaignPreviewList","emailCampaignSendEmailData","emailCampaignSendEmail"],"sources":["/var/www/html/i2pay-portal/src/app/redux/services/EmailCampaign.js"],"sourcesContent":["import { apiRoutes } from \"./apiRoutes\";\nimport { showToastMessage } from \"../../utils/methods\";\nimport Rest from \"../../apiMethod/index\";\nimport RestStore from \"../../apiMethod/storeMethod\";\n\nexport const getEmailCampaignData = async (value, payload) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await Rest.get(`${apiRoutes.getEmailCampaign}?${searchString}`, value.payload);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const addEmailCampaignData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.createEmailCampaign, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const deleteEmailCampaignData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.deleteEmailCampaign, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const updateEmailCampaignData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.updateEmailCampaign, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const detailEmailCampaignData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.detailEmailCampaign, { id: payload.id });\n\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n\nexport const getEmailCampaignPreviewEmailListData = async (value, payload) => {\n    try {\n        let searchString = \"\";\n        if (value?.currentPage) {\n            searchString += `page=${value?.currentPage}`;\n        }\n\n        if (value?.perPage) {\n            searchString += `&perPage=${value?.perPage}`;\n        }\n\n        if (value?.searchQuery !== \"\") {\n            searchString += `&search=${value?.searchQuery}`;\n        }\n\n        const { data } = await Rest.post(`${apiRoutes.getEmailCampaignPreviewList}?${searchString}`, payload);\n\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const emailCampaignSendEmailData = async (payload) => {\n    try {\n        const { data } = await Rest.post(apiRoutes.emailCampaignSendEmail, payload);\n        showToastMessage(data?.response, data?.responseCode);\n        return data;\n    } catch (error) {\n        return {\n            error: true,\n            data: error,\n        };\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}