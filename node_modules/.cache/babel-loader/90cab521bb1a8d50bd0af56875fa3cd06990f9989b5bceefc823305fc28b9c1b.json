{"ast":null,"code":"var _jsxFileName = \"/var/www/html/i2pay-portal/src/app/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { store, persistor } from \"./redux/store/index\";\nimport PageRoutes from \"./pages/index\";\nimport AppLoader from \"./components/common/Loader\";\nimport Setting from \"./components/common/Setting\";\nimport { useEffect } from \"react\";\nimport { menuElementsType, menuItems } from \"./utils/constants\";\nimport { useLocation, useParams, matchPath } from \"react-router-dom\";\nimport Header from \"./components/common/Header\";\nimport MobileViewMenu from \"./components/common/menu/MobileViewMenu\";\nimport MainMenu from \"./components/common/menu/index\";\nimport { initializeApp } from \"firebase/app\";\nimport ApplicationRatesPopup from \"./components/common/ApplicationRatesPopup\";\nimport { equalTo, getDatabase, onValue, orderByChild, query, ref, remove, update } from \"firebase/database\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport { changeApplicationStatus, changeConnectorStatus, changeKeyStatus, changeRateStatus, detailStart } from \"./redux/actions/PersistActions\";\nimport PopupNotification from \"./components/common/notification\";\nimport AdminNotification from \"./components/common/AdminNotification\";\nimport * as Icon from \"react-feather\";\nimport Footer from \"./components/common/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _store$getState, _store$getState2, _store$getState2$pers, _store$getState2$pers2, _store$getState2$pers3, _menuItems$findIndex, _menuItems$findIndex2, _menuItems$findIndex3;\n  const [isMenuVisible, setIsMenuVisible] = React.useState(false);\n  const [findIndex, setFindIndex] = React.useState(0);\n  const [findSubIndex, setFindSubIndex] = React.useState(0);\n  const [notificationList, setNotificationList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [globalNotificationData, setGlobalNotificationData] = React.useState([]);\n  const location = useLocation();\n  const params = useParams();\n  const dispatch = useDispatch();\n  let isLoggedIn = false;\n  let isRateSent = \"0\";\n  // let persistRoot = localStorage?.getItem(\"persist:root\");\n  const persistRoot = (_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : _store$getState.persist;\n  const {\n    userData\n  } = useSelector(state => state.persist);\n  if (persistRoot) {\n    var _persistRoot$userData, _persistRoot$userData2;\n    isLoggedIn = persistRoot === null || persistRoot === void 0 ? void 0 : persistRoot.isLoggedIn;\n    isRateSent = persistRoot === null || persistRoot === void 0 ? void 0 : (_persistRoot$userData = persistRoot.userData) === null || _persistRoot$userData === void 0 ? void 0 : (_persistRoot$userData2 = _persistRoot$userData.data) === null || _persistRoot$userData2 === void 0 ? void 0 : _persistRoot$userData2.is_rate_sent;\n  }\n  const onLocationChangeEffect = () => {\n    var _menuItems$index;\n    let matchValue = \"\";\n    const index = menuItems.findIndex(item => {\n      if (typeof (item === null || item === void 0 ? void 0 : item.totalRoute) === \"object\") {\n        var _item$totalRoute;\n        let flag = false;\n        item === null || item === void 0 ? void 0 : (_item$totalRoute = item.totalRoute) === null || _item$totalRoute === void 0 ? void 0 : _item$totalRoute.forEach(subItem => {\n          const match = matchPath({\n            path: subItem\n          }, location.pathname);\n          if (match && !flag) {\n            matchValue = match;\n            flag = true;\n          }\n        });\n        return flag;\n      } else {\n        var _item$totalRoute2;\n        return (_item$totalRoute2 = item.totalRoute) === null || _item$totalRoute2 === void 0 ? void 0 : _item$totalRoute2.includes(location.pathname);\n      }\n    });\n    if (((_menuItems$index = menuItems[index]) === null || _menuItems$index === void 0 ? void 0 : _menuItems$index.type) === menuElementsType.MULTI) {\n      var _menuItems$index2, _menuItems$index2$sub;\n      (_menuItems$index2 = menuItems[index]) === null || _menuItems$index2 === void 0 ? void 0 : (_menuItems$index2$sub = _menuItems$index2.subMenuItems) === null || _menuItems$index2$sub === void 0 ? void 0 : _menuItems$index2$sub.map((subMenu, subMenuIndex) => {\n        var _matchValue;\n        if ((subMenu === null || subMenu === void 0 ? void 0 : subMenu.to) === ((_matchValue = matchValue) === null || _matchValue === void 0 ? void 0 : _matchValue.pathname)) {\n          setFindSubIndex(subMenuIndex);\n        }\n      });\n    }\n    if (index !== -1) {\n      setIsMenuVisible(true);\n      setFindIndex(index);\n      return;\n    }\n    setIsMenuVisible(false);\n  };\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n  };\n  useEffect(onLocationChangeEffect, [location, params]);\n  const app = initializeApp(firebaseConfig);\n  const messaging = getMessaging(app);\n\n  // useEffect(() => {\n  //     // setInterval(function () {\n  //     //     const notifications = [...notificationList];\n  //     //     notifications.push(1);\n  //     //     setNotificationList(notifications);\n  //     // }, 2000);\n  // }, []);\n\n  // setInterval(function () {\n  //     // const notifications = [...notificationList];\n  //     // notifications.push(1);\n  //     // setNotificationList(notifications);\n  // }, 3000);\n\n  try {\n    onMessage(messaging, payload => {\n      var _payload$notification, _payload$notification2, _payload$notification3;\n      const toastProperties = {\n        title: payload === null || payload === void 0 ? void 0 : (_payload$notification = payload.notification) === null || _payload$notification === void 0 ? void 0 : _payload$notification.title,\n        body: payload === null || payload === void 0 ? void 0 : (_payload$notification2 = payload.notification) === null || _payload$notification2 === void 0 ? void 0 : _payload$notification2.body,\n        image: payload === null || payload === void 0 ? void 0 : (_payload$notification3 = payload.notification) === null || _payload$notification3 === void 0 ? void 0 : _payload$notification3.image,\n        id: payload === null || payload === void 0 ? void 0 : payload.messageId\n      };\n      setNotificationList([...notificationList, toastProperties]);\n\n      // setTimeout(() => {\n      //     setNotificationList(false);\n      // }, 3000);\n    });\n  } catch (err) {\n    // console.log(\"Message received\", { err });\n  }\n  useEffect(() => {\n    window.ononline = event => {\n      // console.log(\"Back Online\");\n    };\n    window.onoffline = event => {\n      // console.log(\"Connection Lost\");\n    };\n  }, []);\n  useEffect(() => {\n    var _window, _window$location, _window$location$sear;\n    if ((_window = window) !== null && _window !== void 0 && (_window$location = _window.location) !== null && _window$location !== void 0 && (_window$location$sear = _window$location.search) !== null && _window$location$sear !== void 0 && _window$location$sear.includes(\"t=\")) {\n      var _window2, _window2$location, _window2$location$sea;\n      setIsLoading(true);\n      // dispatch(logoutUser());\n\n      const token = (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$location = _window2.location) === null || _window2$location === void 0 ? void 0 : (_window2$location$sea = _window2$location.search) === null || _window2$location$sea === void 0 ? void 0 : _window2$location$sea.split(\"=\")[1];\n\n      // console.log(window.location);\n      let finalToken = token;\n      if (token !== null && token !== void 0 && token.split(\"/\")) {\n        finalToken = token === null || token === void 0 ? void 0 : token.split(\"/\")[0];\n      }\n      const callback = () => {\n        setIsLoading(false);\n        // window.location.replace(`${window.location.origin}`);\n        const nextURL = window.location.origin;\n        const nextTitle = \"My new page title\";\n        const nextState = {\n          additionalInformation: \"Updated the URL with JS\"\n        };\n\n        // This will create a new entry in the browser's history, without reloading\n        window.history.pushState(nextState, nextTitle, nextURL);\n      };\n      dispatch(detailStart(finalToken, callback));\n    }\n  }, []);\n  const merchantId = (_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$pers = _store$getState2.persist) === null || _store$getState2$pers === void 0 ? void 0 : (_store$getState2$pers2 = _store$getState2$pers.userData) === null || _store$getState2$pers2 === void 0 ? void 0 : (_store$getState2$pers3 = _store$getState2$pers2.data) === null || _store$getState2$pers3 === void 0 ? void 0 : _store$getState2$pers3.id;\n  const getData = async () => {\n    const db = getDatabase();\n    const q = query(ref(db, \"merchant_detail\"), orderByChild(\"merchant_id\"), equalTo(merchantId));\n    onValue(q, snapshot => {\n      var _data$;\n      const data = [];\n      snapshot.forEach(function (child) {\n        data.push(child.val());\n      });\n      if ((data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.is_call_detail) === \"yes\") {\n        var _userData$data;\n        store.dispatch(detailStart(userData === null || userData === void 0 ? void 0 : (_userData$data = userData.data) === null || _userData$data === void 0 ? void 0 : _userData$data.token, () => {}));\n      }\n      console.log(\"Firebase Data In 1\", {\n        data\n      });\n      store.dispatch(changeApplicationStatus(data === null || data === void 0 ? void 0 : data[0]));\n      store.dispatch(changeRateStatus(data === null || data === void 0 ? void 0 : data[0]));\n      store.dispatch(changeConnectorStatus(data === null || data === void 0 ? void 0 : data[0]));\n      store.dispatch(changeKeyStatus(data === null || data === void 0 ? void 0 : data[0]));\n    });\n    const merchantMessages = query(ref(db, \"merchant_global_message\"));\n    onValue(merchantMessages, snapshot => {\n      const data = [];\n      snapshot.forEach(function (child) {\n        var _JSON$parse;\n        if ((_JSON$parse = JSON.parse(child.val().merchant_id)) !== null && _JSON$parse !== void 0 && _JSON$parse.includes(merchantId)) {\n          data.push(child.val());\n        }\n      });\n      setGlobalNotificationData(data);\n    });\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      getData();\n    }\n  }, [isLoggedIn]);\n  const onClickCloseMessage = item => {\n    const db = getDatabase();\n    const q = query(ref(db, \"merchant_global_message\"), orderByChild(\"id\"), equalTo(item === null || item === void 0 ? void 0 : item.id));\n    // console.log({q})\n\n    onValue(q, async snapshot => {\n      var _data;\n      let data = {};\n      snapshot.forEach(function (child) {\n        data = child.val();\n      });\n      let merchantIdArray = JSON.parse((_data = data) === null || _data === void 0 ? void 0 : _data.merchant_id);\n      const index = merchantIdArray === null || merchantIdArray === void 0 ? void 0 : merchantIdArray.indexOf(merchantId);\n      if (index > -1) {\n        // only splice array when item is found\n        merchantIdArray.splice(index, 1); // 2nd parameter means remove one item only\n      }\n\n      if ((merchantIdArray === null || merchantIdArray === void 0 ? void 0 : merchantIdArray.length) > 0) {\n        const postData = {\n          ...item,\n          merchant_id: JSON.stringify(merchantIdArray)\n        };\n        const updates = {};\n        updates[`/merchant_global_message/${item === null || item === void 0 ? void 0 : item.id}`] = postData;\n        await update(ref(db), updates);\n      } else {\n        await remove(ref(db, `/merchant_global_message/${item === null || item === void 0 ? void 0 : item.id}`));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(AppLoader, {\n      isLoading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: isLoading,\n      persistor: persistor,\n      children: [/*#__PURE__*/_jsxDEV(PopupNotification, {\n        toastList: notificationList,\n        autoDelete: true,\n        autoDeleteTime: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), isMenuVisible ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(MobileViewMenu, {\n          isMenuVisible: menuItems[findIndex].menu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 44\n        }, this), isRateSent == 1 ? null : /*#__PURE__*/_jsxDEV(Header, {\n          active: findIndex + 1,\n          activeSubMenu: findSubIndex,\n          isMenuVisible: (_menuItems$findIndex = menuItems[findIndex]) === null || _menuItems$findIndex === void 0 ? void 0 : _menuItems$findIndex.menu,\n          isHeaderVisible: (_menuItems$findIndex2 = menuItems[findIndex]) === null || _menuItems$findIndex2 === void 0 ? void 0 : _menuItems$findIndex2.header,\n          isAuthRequired: isLoggedIn ? (_menuItems$findIndex3 = menuItems[findIndex]) === null || _menuItems$findIndex3 === void 0 ? void 0 : _menuItems$findIndex3.isAuthRequired : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 33\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full z-[9999]\",\n          children: globalNotificationData === null || globalNotificationData === void 0 ? void 0 : globalNotificationData.map((item, index) => {\n            // console.log({ item });\n            let messageType = \"0\";\n            let borderColor = \"\";\n            let bgColor = \"\";\n            let icon = \"\";\n            if ((item === null || item === void 0 ? void 0 : item.type) === \"0\") {\n              messageType = \"primary\";\n              borderColor = \"#4B6C73\";\n              bgColor = \"#E8F9FF\";\n              icon = /*#__PURE__*/_jsxDEV(Icon.Info, {\n                size: 20,\n                color: borderColor,\n                className: \"text-white cursor-pointer mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 52\n              }, this);\n            } else if ((item === null || item === void 0 ? void 0 : item.type) === \"1\") {\n              messageType = \"success\";\n              borderColor = \"#4B7052\";\n              bgColor = \"#E4FCE6\";\n              icon = /*#__PURE__*/_jsxDEV(Icon.CheckCircle, {\n                size: 20,\n                color: borderColor,\n                className: \"text-white cursor-pointer mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 49\n              }, this);\n            } else if ((item === null || item === void 0 ? void 0 : item.type) === \"2\") {\n              messageType = \"warning\";\n              borderColor = \"#9A4C6C\";\n              bgColor = \"#FFDFEE\";\n              icon = /*#__PURE__*/_jsxDEV(Icon.AlertOctagon, {\n                size: 20,\n                color: borderColor,\n                className: \"text-white cursor-pointer mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 49\n              }, this);\n            } else if ((item === null || item === void 0 ? void 0 : item.type) === \"3\") {\n              messageType = \"danger\";\n              borderColor = \"#B12C1F\";\n              bgColor = \"#FFE0DD\";\n              icon = /*#__PURE__*/_jsxDEV(Icon.AlertCircle, {\n                size: 20,\n                color: borderColor,\n                className: \"text-white cursor-pointer mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 49\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(AdminNotification, {\n              // isVisible\n              borderColor: borderColor,\n              bgColor: bgColor,\n              type: messageType,\n              icon: icon,\n              message: item === null || item === void 0 ? void 0 : item.message,\n              onClickCloseMessage: () => {\n                onClickCloseMessage(item);\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 33\n        }, this), isLoggedIn ? isRateSent == 1 ?\n        /*#__PURE__*/\n        // <MainMenu active={false} isMenuVisible={menuItems[findIndex]?.menu}>\n        _jsxDEV(ApplicationRatesPopup, {\n          visible: isRateSent == 1 ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(PageRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 37\n        }, this) :\n        /*#__PURE__*/\n        // </MainMenu>\n        // <MainMenu\n        //     active={findIndex + 1}\n        //     activeSubMenu={findSubIndex}\n        //     isMenuVisible={menuItems[findIndex]?.menu}>\n        // <PageRoutes />\n        // </MainMenu>\n        _jsxDEV(PageRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 33\n        }, this), isLoggedIn && isRateSent == 1 ? null : /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(PageRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        toastClassName: \"dark:bg-darkmode-800 dark:text-slate-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AppLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"KCrnyWlndSRcnvR+kJdN9EJ2r84=\", false, function () {\n  return [useLocation, useParams, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","useSelector","PersistGate","ToastContainer","store","persistor","PageRoutes","AppLoader","Setting","useEffect","menuElementsType","menuItems","useLocation","useParams","matchPath","Header","MobileViewMenu","MainMenu","initializeApp","ApplicationRatesPopup","equalTo","getDatabase","onValue","orderByChild","query","ref","remove","update","getMessaging","getToken","onMessage","changeApplicationStatus","changeConnectorStatus","changeKeyStatus","changeRateStatus","detailStart","PopupNotification","AdminNotification","Icon","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_store$getState","_store$getState2","_store$getState2$pers","_store$getState2$pers2","_store$getState2$pers3","_menuItems$findIndex","_menuItems$findIndex2","_menuItems$findIndex3","isMenuVisible","setIsMenuVisible","useState","findIndex","setFindIndex","findSubIndex","setFindSubIndex","notificationList","setNotificationList","isLoading","setIsLoading","globalNotificationData","setGlobalNotificationData","location","params","dispatch","isLoggedIn","isRateSent","persistRoot","getState","persist","userData","state","_persistRoot$userData","_persistRoot$userData2","data","is_rate_sent","onLocationChangeEffect","_menuItems$index","matchValue","index","item","totalRoute","_item$totalRoute","flag","forEach","subItem","match","path","pathname","_item$totalRoute2","includes","type","MULTI","_menuItems$index2","_menuItems$index2$sub","subMenuItems","map","subMenu","subMenuIndex","_matchValue","to","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","messaging","payload","_payload$notification","_payload$notification2","_payload$notification3","toastProperties","title","notification","body","image","id","messageId","err","window","ononline","event","onoffline","_window","_window$location","_window$location$sear","search","_window2","_window2$location","_window2$location$sea","token","split","finalToken","callback","nextURL","origin","nextTitle","nextState","additionalInformation","history","pushState","merchantId","getData","db","q","snapshot","_data$","child","push","val","is_call_detail","_userData$data","console","log","merchantMessages","_JSON$parse","JSON","parse","merchant_id","onClickCloseMessage","_data","merchantIdArray","indexOf","splice","length","postData","stringify","updates","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","toastList","autoDelete","autoDeleteTime","menu","active","activeSubMenu","isHeaderVisible","header","isAuthRequired","className","messageType","borderColor","bgColor","icon","Info","size","color","CheckCircle","AlertOctagon","AlertCircle","message","visible","toastClassName","_c","$RefreshReg$"],"sources":["/var/www/html/i2pay-portal/src/app/index.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { store, persistor } from \"./redux/store/index\";\nimport PageRoutes from \"./pages/index\";\nimport AppLoader from \"./components/common/Loader\";\nimport Setting from \"./components/common/Setting\";\nimport { useEffect } from \"react\";\nimport { menuElementsType, menuItems } from \"./utils/constants\";\nimport { useLocation, useParams, matchPath } from \"react-router-dom\";\nimport Header from \"./components/common/Header\";\nimport MobileViewMenu from \"./components/common/menu/MobileViewMenu\";\nimport MainMenu from \"./components/common/menu/index\";\nimport { initializeApp } from \"firebase/app\";\nimport ApplicationRatesPopup from \"./components/common/ApplicationRatesPopup\";\nimport { equalTo, getDatabase, onValue, orderByChild, query, ref, remove, update } from \"firebase/database\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport {\n    changeApplicationStatus,\n    changeConnectorStatus,\n    changeKeyStatus,\n    changeRateStatus,\n    detailStart,\n} from \"./redux/actions/PersistActions\";\nimport PopupNotification from \"./components/common/notification\";\nimport AdminNotification from \"./components/common/AdminNotification\";\nimport * as Icon from \"react-feather\";\nimport Footer from \"./components/common/Footer\";\n\nconst App = () => {\n    const [isMenuVisible, setIsMenuVisible] = React.useState(false);\n    const [findIndex, setFindIndex] = React.useState(0);\n    const [findSubIndex, setFindSubIndex] = React.useState(0);\n    const [notificationList, setNotificationList] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [globalNotificationData, setGlobalNotificationData] = React.useState([]);\n    const location = useLocation();\n    const params = useParams();\n    const dispatch = useDispatch();\n\n    let isLoggedIn = false;\n    let isRateSent = \"0\";\n    // let persistRoot = localStorage?.getItem(\"persist:root\");\n    const persistRoot = store.getState()?.persist;\n    const { userData } = useSelector((state) => state.persist);\n\n    if (persistRoot) {\n        isLoggedIn = persistRoot?.isLoggedIn;\n        isRateSent = persistRoot?.userData?.data?.is_rate_sent;\n    }\n\n    const onLocationChangeEffect = () => {\n        let matchValue = \"\";\n        const index = menuItems.findIndex((item) => {\n            if (typeof item?.totalRoute === \"object\") {\n                let flag = false;\n                item?.totalRoute?.forEach((subItem) => {\n                    const match = matchPath({ path: subItem }, location.pathname);\n\n                    if (match && !flag) {\n                        matchValue = match;\n                        flag = true;\n                    }\n                });\n                return flag;\n            } else {\n                return item.totalRoute?.includes(location.pathname);\n            }\n        });\n\n        if (menuItems[index]?.type === menuElementsType.MULTI) {\n            menuItems[index]?.subMenuItems?.map((subMenu, subMenuIndex) => {\n                if (subMenu?.to === matchValue?.pathname) {\n                    setFindSubIndex(subMenuIndex);\n                }\n            });\n        }\n\n        if (index !== -1) {\n            setIsMenuVisible(true);\n            setFindIndex(index);\n            return;\n        }\n        setIsMenuVisible(false);\n    };\n\n    const firebaseConfig = {\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n        messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\n        measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n    };\n\n    useEffect(onLocationChangeEffect, [location, params]);\n    const app = initializeApp(firebaseConfig);\n    const messaging = getMessaging(app);\n\n    // useEffect(() => {\n    //     // setInterval(function () {\n    //     //     const notifications = [...notificationList];\n    //     //     notifications.push(1);\n    //     //     setNotificationList(notifications);\n    //     // }, 2000);\n    // }, []);\n\n    // setInterval(function () {\n    //     // const notifications = [...notificationList];\n    //     // notifications.push(1);\n    //     // setNotificationList(notifications);\n    // }, 3000);\n\n    try {\n        onMessage(messaging, (payload) => {\n            const toastProperties = {\n                title: payload?.notification?.title,\n                body: payload?.notification?.body,\n                image: payload?.notification?.image,\n                id: payload?.messageId,\n            };\n            setNotificationList([...notificationList, toastProperties]);\n\n            // setTimeout(() => {\n            //     setNotificationList(false);\n            // }, 3000);\n        });\n    } catch (err) {\n        // console.log(\"Message received\", { err });\n    }\n\n    useEffect(() => {\n        window.ononline = (event) => {\n            // console.log(\"Back Online\");\n        };\n\n        window.onoffline = (event) => {\n            // console.log(\"Connection Lost\");\n        };\n    }, []);\n\n    useEffect(() => {\n        if (window?.location?.search?.includes(\"t=\")) {\n            setIsLoading(true);\n            // dispatch(logoutUser());\n\n            const token = window?.location?.search?.split(\"=\")[1];\n\n            // console.log(window.location);\n            let finalToken = token;\n            if (token?.split(\"/\")) {\n                finalToken = token?.split(\"/\")[0];\n            }\n\n            const callback = () => {\n                setIsLoading(false);\n                // window.location.replace(`${window.location.origin}`);\n                const nextURL = window.location.origin;\n                const nextTitle = \"My new page title\";\n                const nextState = { additionalInformation: \"Updated the URL with JS\" };\n\n                // This will create a new entry in the browser's history, without reloading\n                window.history.pushState(nextState, nextTitle, nextURL);\n            };\n\n            dispatch(detailStart(finalToken, callback));\n        }\n    }, []);\n\n    const merchantId = store.getState()?.persist?.userData?.data?.id;\n\n    const getData = async () => {\n        const db = getDatabase();\n\n        const q = query(ref(db, \"merchant_detail\"), orderByChild(\"merchant_id\"), equalTo(merchantId));\n\n        onValue(q, (snapshot) => {\n            const data = [];\n            snapshot.forEach(function (child) {\n                data.push(child.val());\n            });\n\n            if (data?.[0]?.is_call_detail === \"yes\") {\n                store.dispatch(detailStart(userData?.data?.token, () => {}));\n            }\n            console.log(\"Firebase Data In 1\", { data });\n            store.dispatch(changeApplicationStatus(data?.[0]));\n            store.dispatch(changeRateStatus(data?.[0]));\n            store.dispatch(changeConnectorStatus(data?.[0]));\n            store.dispatch(changeKeyStatus(data?.[0]));\n        });\n\n        const merchantMessages = query(ref(db, \"merchant_global_message\"));\n        onValue(merchantMessages, (snapshot) => {\n            const data = [];\n            snapshot.forEach(function (child) {\n                if (JSON.parse(child.val().merchant_id)?.includes(merchantId)) {\n                    data.push(child.val());\n                }\n            });\n            setGlobalNotificationData(data);\n        });\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            getData();\n        }\n    }, [isLoggedIn]);\n\n    const onClickCloseMessage = (item) => {\n        const db = getDatabase();\n        const q = query(ref(db, \"merchant_global_message\"), orderByChild(\"id\"), equalTo(item?.id));\n        // console.log({q})\n\n        onValue(q, async (snapshot) => {\n            let data = {};\n            snapshot.forEach(function (child) {\n                data = child.val();\n            });\n\n            let merchantIdArray = JSON.parse(data?.merchant_id);\n            const index = merchantIdArray?.indexOf(merchantId);\n            if (index > -1) {\n                // only splice array when item is found\n                merchantIdArray.splice(index, 1); // 2nd parameter means remove one item only\n            }\n\n            if (merchantIdArray?.length > 0) {\n                const postData = {\n                    ...item,\n                    merchant_id: JSON.stringify(merchantIdArray),\n                };\n                const updates = {};\n                updates[`/merchant_global_message/${item?.id}`] = postData;\n\n                await update(ref(db), updates);\n            } else {\n                await remove(ref(db, `/merchant_global_message/${item?.id}`));\n            }\n        });\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <AppLoader isLoading={true} />\n            ) : (\n                <PersistGate loading={isLoading} persistor={persistor}>\n                    {/* <div\n                        className=\"toastify on toastify-center toastify-top max-w-[400px] w-full\"\n                        style={{ transform: notificationList ? \"translate(0px, 0px)\" : \"\", top: notificationList ? \"15px\" : \"\" }}>\n                        <div id=\"notification-with-avatar-content\" className=\"toastify-content flex\">\n                            {notificationList?.image && (\n                                <div className=\"w-10 h-10 flex-none image-fit rounded-full overflow-hidden mr-4\">\n                                    <img alt=\"Icewall Tailwind HTML Admin Template\" src={notificationList?.image} />\n                                </div>\n                            )}\n\n                            <div className=\"sm:mr-4\">\n                                <div className=\"font-medium\">{notificationList?.title}</div>\n                                <div className=\"text-slate-500 mt-1\">{notificationList?.body}</div>\n                            </div>\n                            <a\n                                onClick={() => {\n                                    setNotificationList(false);\n                                }}\n                                data-dismiss=\"notification\"\n                                className=\"absolute top-0 bottom-0 right-0 flex items-center px-6 border-l border-slate-200/60 dark:border-darkmode-400 font-medium text-primary dark:text-slate-400\">\n                                Close\n                            </a>\n                        </div>\n                    </div> */}\n\n                    <PopupNotification toastList={notificationList} autoDelete={true} autoDeleteTime={2000} />\n\n                    {isMenuVisible ? (\n                        <>\n                            {/* <div className=\"p-5\"> */}\n                            {isLoggedIn && <MobileViewMenu isMenuVisible={menuItems[findIndex].menu} />}\n                            {isRateSent == 1 ? null : (\n                                <Header\n                                    active={findIndex + 1}\n                                    activeSubMenu={findSubIndex}\n                                    isMenuVisible={menuItems[findIndex]?.menu}\n                                    isHeaderVisible={menuItems[findIndex]?.header}\n                                    isAuthRequired={isLoggedIn ? menuItems[findIndex]?.isAuthRequired : false}></Header>\n                            )}\n                            {isLoggedIn && (\n                                <div className=\"w-full z-[9999]\">\n                                    {globalNotificationData?.map((item, index) => {\n                                        // console.log({ item });\n                                        let messageType = \"0\";\n                                        let borderColor = \"\";\n                                        let bgColor = \"\";\n                                        let icon = \"\";\n\n                                        if (item?.type === \"0\") {\n                                            messageType = \"primary\";\n                                            borderColor = \"#4B6C73\";\n                                            bgColor = \"#E8F9FF\";\n                                            icon = <Icon.Info size={20} color={borderColor} className=\"text-white cursor-pointer mr-2\" />;\n                                        } else if (item?.type === \"1\") {\n                                            messageType = \"success\";\n                                            borderColor = \"#4B7052\";\n                                            bgColor = \"#E4FCE6\";\n                                            icon = (\n                                                <Icon.CheckCircle\n                                                    size={20}\n                                                    color={borderColor}\n                                                    className=\"text-white cursor-pointer mr-2\"\n                                                />\n                                            );\n                                        } else if (item?.type === \"2\") {\n                                            messageType = \"warning\";\n                                            borderColor = \"#9A4C6C\";\n                                            bgColor = \"#FFDFEE\";\n                                            icon = (\n                                                <Icon.AlertOctagon\n                                                    size={20}\n                                                    color={borderColor}\n                                                    className=\"text-white cursor-pointer mr-2\"\n                                                />\n                                            );\n                                        } else if (item?.type === \"3\") {\n                                            messageType = \"danger\";\n                                            borderColor = \"#B12C1F\";\n                                            bgColor = \"#FFE0DD\";\n                                            icon = (\n                                                <Icon.AlertCircle\n                                                    size={20}\n                                                    color={borderColor}\n                                                    className=\"text-white cursor-pointer mr-2\"\n                                                />\n                                            );\n                                        }\n\n                                        return (\n                                            <AdminNotification\n                                                key={index}\n                                                // isVisible\n                                                borderColor={borderColor}\n                                                bgColor={bgColor}\n                                                type={messageType}\n                                                icon={icon}\n                                                message={item?.message}\n                                                onClickCloseMessage={() => {\n                                                    onClickCloseMessage(item);\n                                                }}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                            )}\n                            {isLoggedIn ? (\n                                isRateSent == 1 ? (\n                                    // <MainMenu active={false} isMenuVisible={menuItems[findIndex]?.menu}>\n                                    <ApplicationRatesPopup visible={isRateSent == 1 ? true : false} />\n                                ) : (\n                                    <PageRoutes />\n                                )\n                            ) : (\n                                // </MainMenu>\n                                // <MainMenu\n                                //     active={findIndex + 1}\n                                //     activeSubMenu={findSubIndex}\n                                //     isMenuVisible={menuItems[findIndex]?.menu}>\n                                // <PageRoutes />\n                                // </MainMenu>\n                                <PageRoutes />\n                            )}\n                            {isLoggedIn && isRateSent == 1 ? null : <Footer />}\n                            {/* </div> */}\n                        </>\n                    ) : (\n                        <PageRoutes />\n                    )}\n\n                    <ToastContainer toastClassName=\"dark:bg-darkmode-800 dark:text-slate-500\" />\n                    {/* <Setting /> */}\n                    <AppLoader />\n                </PersistGate>\n            )}\n        </>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}