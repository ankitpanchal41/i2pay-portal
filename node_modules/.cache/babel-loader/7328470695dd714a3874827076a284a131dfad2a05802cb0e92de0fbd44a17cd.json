{"ast":null,"code":"import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { GET_AUTO_PAYOUT_REQUEST, GET_AUTO_PAYOUT_RESPONSE } from \"../actions/AutoPayoutReportsAction\";\nimport { autoPayoutReportsData } from \"../services/AutoPayoutReports\";\nfunction* getAutoPayoutReportsSaga(data) {\n  try {\n    const result = yield call(autoPayoutReportsData, data);\n    if (result.responseCode === 200) {\n      yield put({\n        type: GET_AUTO_PAYOUT_RESPONSE,\n        payload: {\n          autoPayoutReports: result.data,\n          paginate: result === null || result === void 0 ? void 0 : result.paginate\n        }\n      });\n    }\n  } catch (error) {} finally {\n    data === null || data === void 0 ? void 0 : data.callback();\n  }\n}\nfunction* watchAutoPayoutReportsSaga() {\n  yield takeEvery(GET_AUTO_PAYOUT_REQUEST, getAutoPayoutReportsSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchAutoPayoutReportsSaga)]);\n}","map":{"version":3,"names":["all","fork","put","takeEvery","call","GET_AUTO_PAYOUT_REQUEST","GET_AUTO_PAYOUT_RESPONSE","autoPayoutReportsData","getAutoPayoutReportsSaga","data","result","responseCode","type","payload","autoPayoutReports","paginate","error","callback","watchAutoPayoutReportsSaga","rootSaga"],"sources":["/var/www/html/i2pay-portal/src/app/redux/sagas/AutoPayoutReports.js"],"sourcesContent":["import { all, fork, put, takeEvery, call } from \"redux-saga/effects\";\nimport { GET_AUTO_PAYOUT_REQUEST, GET_AUTO_PAYOUT_RESPONSE } from \"../actions/AutoPayoutReportsAction\";\nimport { autoPayoutReportsData } from \"../services/AutoPayoutReports\";\n\nfunction* getAutoPayoutReportsSaga(data) {\n    try {\n        const result = yield call(autoPayoutReportsData, data);\n        if (result.responseCode === 200) {\n            yield put({\n                type: GET_AUTO_PAYOUT_RESPONSE,\n                payload: { autoPayoutReports: result.data, paginate: result?.paginate },\n            });\n        }\n    } catch (error) {\n    } finally {\n        data?.callback();\n    }\n}\n\nfunction* watchAutoPayoutReportsSaga() {\n    yield takeEvery(GET_AUTO_PAYOUT_REQUEST, getAutoPayoutReportsSaga);\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchAutoPayoutReportsSaga)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,oBAAoB;AACpE,SAASC,uBAAuB,EAAEC,wBAAwB,QAAQ,oCAAoC;AACtG,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,UAAUC,wBAAwBA,CAACC,IAAI,EAAE;EACrC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMN,IAAI,CAACG,qBAAqB,EAAEE,IAAI,CAAC;IACtD,IAAIC,MAAM,CAACC,YAAY,KAAK,GAAG,EAAE;MAC7B,MAAMT,GAAG,CAAC;QACNU,IAAI,EAAEN,wBAAwB;QAC9BO,OAAO,EAAE;UAAEC,iBAAiB,EAAEJ,MAAM,CAACD,IAAI;UAAEM,QAAQ,EAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK;QAAS;MAC1E,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;IACNP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,QAAQ,CAAC,CAAC;EACpB;AACJ;AAEA,UAAUC,0BAA0BA,CAAA,EAAG;EACnC,MAAMf,SAAS,CAACE,uBAAuB,EAAEG,wBAAwB,CAAC;AACtE;AAEA,eAAe,UAAUW,QAAQA,CAAA,EAAG;EAChC,MAAMnB,GAAG,CAAC,CAACC,IAAI,CAACiB,0BAA0B,CAAC,CAAC,CAAC;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}